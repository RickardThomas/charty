{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/cv 2020/Projects for GitHub/charting-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/cv 2020/Projects for GitHub/charting-dashboard/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\n\nfunction App() {\n  const _useState = useState(\"COINBASE:BTCEUR\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        coiny = _useState2[0],\n        setCoiny = _useState2[1];\n\n  const _useState3 = useState(\"COINBASE:BTCEUR\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        timeFrame = _useState4[0],\n        setTimeFrame = _useState4[1];\n\n  const _useState5 = useState(\"BollingerBandsR@tv-basicstudies\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        indicator = _useState6[0],\n        setIndicator = _useState6[1]; // let indicator =  TradingViewWidget.studies = [ \"BollingerBandsR@tv-basicstudies\"]\n  // const[width, setWidth] = useState(window.innerWidth);\n  //   setWidth(window.innerWidth +'px')\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setCoiny(\"COINBASE:ETHEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"ETH\"), React.createElement(\"button\", {\n    onClick: () => setCoiny(\"COINBASE:BTCEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"BTC\"), React.createElement(\"button\", {\n    onClick: () => setTimeFrame(\"COINBASE:BTCEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" Short-term\"), React.createElement(\"button\", {\n    onClick: () => setTimeFrame(\"COINBASE:BTCEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Medium-term\"), React.createElement(\"button\", {\n    onClick: () => setIndicator([\"TripleEMA@tv-basicstudies\", \"RSI@tv-basicstudies\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"BollingerBand\")), React.createElement(\"div\", {\n    className: \"chart-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: coiny,\n    theme: 'Dark',\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: \"3\",\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"chart-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: coiny,\n    theme: 'Dark',\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: \"15\",\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"chart-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: coiny,\n    theme: 'Dark',\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: \"45\",\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"scalp-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: coiny,\n    theme: 'Dark',\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: \"60\",\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/cv 2020/Projects for GitHub/charting-dashboard/src/App.js"],"names":["React","useState","TradingViewWidget","App","coiny","setCoiny","timeFrame","setTimeFrame","indicator","setIndicator","indicators"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState } from 'react'\nimport TradingViewWidget from 'react-tradingview-widget';\n\nfunction App() {\n\nconst [coiny, setCoiny] = useState(\"COINBASE:BTCEUR\");\nconst [timeFrame, setTimeFrame] = useState(\"COINBASE:BTCEUR\");\n\n\nconst [indicator, setIndicator] = useState(\"BollingerBandsR@tv-basicstudies\");\n\n// let indicator =  TradingViewWidget.studies = [ \"BollingerBandsR@tv-basicstudies\"]\n\n// const[width, setWidth] = useState(window.innerWidth);\n//   setWidth(window.innerWidth +'px')\n\n   \n\nreturn (\n\n<div className=\"App\">\n\n<div className=\"Navbar\">\n\n<button onClick={() => setCoiny(\"COINBASE:ETHEUR\")}>ETH</button>\n<button onClick={() => setCoiny(\"COINBASE:BTCEUR\")}>BTC</button>\n\n\n<button onClick={() => setTimeFrame(\"COINBASE:BTCEUR\")}> Short-term</button>\n<button onClick={() => setTimeFrame(\"COINBASE:BTCEUR\")}> Medium-term</button>\n\n<button onClick={() => setIndicator([ \"TripleEMA@tv-basicstudies\",  \"RSI@tv-basicstudies\"])}>BollingerBand</button>\n\n</div >\n\n<div className=\"chart-window\">\n\n    <TradingViewWidget\n    symbol={coiny}\n    theme= {'Dark'}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    Style='8'\n    interval='3'\n    studies={indicators}  \n    hide_side_toolbar={false}\n    autosize      \n    /> \n\n</div>\n\n<div className=\"chart-window\">\n\n    <TradingViewWidget\n    symbol={coiny}\n    theme= {'Dark'}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    Style='8'\n    interval='15'\n    studies={indicators}  \n    hide_side_toolbar={false}\n    autosize      \n    /> \n\n</div>\n\n<div className=\"chart-window\">\n\n    <TradingViewWidget\n    symbol={coiny}\n    theme= {'Dark'}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    Style='8'\n    interval='45'\n    studies={indicators}  \n    hide_side_toolbar={false}\n    autosize      \n    /> \n  \n </div>\n\n<div className=\"scalp-chart\">\n\n    <TradingViewWidget\n    symbol={coiny}\n    theme= {'Dark'}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    Style='8'\n    interval='60'\n    studies={indicators}  \n    hide_side_toolbar={false}\n    autosize      \n    /> \n\n</div>\n\n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}