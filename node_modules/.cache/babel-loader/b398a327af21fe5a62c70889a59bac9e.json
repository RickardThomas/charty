{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/i-code/3-darkened-charts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\nconst links = [{\n  id: 0,\n  text: 'CoinFarm',\n  name: \"https://coinfarm.online/index.asp?tcs=1h\"\n}, {\n  id: 1,\n  text: 'CMC',\n  name: \"https://coinmarketcap.com/\"\n}, {\n  id: 2,\n  text: 'Bitfinex',\n  name: \"https://www.bitfinex.com/trading\"\n}, {\n  id: 3,\n  text: 'Bids vs Sums',\n  name: \"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"\n}];\nconst indicsOne = [\"RSI@tv-basicstudies\", \"CMF@tv-basicstudies\"];\nconst indicsTwo = [\"MAVolumeWeighted@tv-basicstudies\", \"BollingerBandsR@tv-basicstudies\"];\nconst sym = [\"COINBASE:ETHEUR\", \"COINBASE:BTCEUR\", \"COINBASE:BCHEUR\", \"COINBASE:LTCEUR\"];\nconst timeFOne = ['1', '15', '30', '180'];\n\nfunction App() {\n  const _useState = useState(\"COINBASE:BTCEUR\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        coin = _useState2[0],\n        setCoin = _useState2[1];\n\n  const _useState3 = useState(['3', '15', '30', '180']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        timeFrame = _useState4[0],\n        setTimeFrame = _useState4[1];\n\n  const _useState5 = useState([\"BollingerBandsR@tv-basicstudies\"]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        indicators = _useState6[0],\n        setIndicator = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mode = _useState8[0],\n        setMode = _useState8[1];\n\n  const color = mode ? 'light' : 'dark';\n  const navButtons = [{\n    text: 'ETH',\n    symbol: sym[0],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: 'BTC',\n    symbol: sym[1],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: 'BCH',\n    symbol: sym[2],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: 'LTC',\n    symbol: sym[3],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: '1 Indicators',\n    indicators: indicsOne,\n    funct: function () {\n      setIndicator(this.indicators);\n    }\n  }, {\n    text: '2 Indicators',\n    indicators: indicsTwo,\n    funct: function () {\n      setIndicator(this.indicators);\n    }\n  }, {\n    text: 'Short-Term',\n    timeFrame: [timeFOne],\n    funct: function () {\n      setTimeFrame(this.timeFrame);\n    }\n  }, {\n    text: 'Medium-Term',\n    timeFrame: ['30', '60', '120', 'D'],\n    funct: function () {\n      setTimeFrame(this.timeFrame);\n    }\n  }];\n  const charts = [{\n    id: 0,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 1,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 2,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 3,\n    class: 'scalp-chart',\n    symbol: coin\n  }];\n  return React.createElement(\"div\", {\n    className: \"App \" + color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar \" + color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: color,\n    onClick: () => setMode(mode ? false : true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, mode ? 'Dark Mode' : 'Light Mode'), navButtons.map(coin => React.createElement(\"span\", {\n    key: coin.text,\n    className: color,\n    onClick: () => coin.funct(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" \", coin.text)), links.map(link => React.createElement(\"a\", {\n    key: link.name,\n    className: color,\n    target: \"_tab\",\n    href: link.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" \", link.text))), charts.map(chart => React.createElement(\"div\", {\n    key: chart.id,\n    className: chart.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: chart.symbol,\n    theme: mode ? 'Light' : 'Dark',\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: timeFrame[chart.id],\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js"],"names":["React","useState","TradingViewWidget","links","id","text","name","indicsOne","indicsTwo","sym","timeFOne","App","coin","setCoin","timeFrame","setTimeFrame","indicators","setIndicator","mode","setMode","color","navButtons","symbol","funct","charts","class","map","link","chart"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState } from 'react'\nimport TradingViewWidget from 'react-tradingview-widget';\n\nconst links = [ { id:0, text: 'CoinFarm'     ,name:\"https://coinfarm.online/index.asp?tcs=1h\"},\n                { id:1, text: 'CMC'          ,name:\"https://coinmarketcap.com/\" }, \n                { id:2, text: 'Bitfinex'     ,name: \"https://www.bitfinex.com/trading\"}, \n                { id:3, text: 'Bids vs Sums' ,name:\"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"}]\n\n\nconst indicsOne = [ \"RSI@tv-basicstudies\",  \"CMF@tv-basicstudies\"]\nconst indicsTwo = [ \"MAVolumeWeighted@tv-basicstudies\", \"BollingerBandsR@tv-basicstudies\"]\nconst sym =       [\"COINBASE:ETHEUR\", \"COINBASE:BTCEUR\", \"COINBASE:BCHEUR\",  \"COINBASE:LTCEUR\" ]\n\nconst timeFOne = ['1', '15', '30', '180']\n\n\nfunction App() {\n\nconst [coin, setCoin] = useState(\"COINBASE:BTCEUR\");\nconst [timeFrame, setTimeFrame] = useState(['3', '15', '30' , '180'])\nconst [indicators, setIndicator] = useState([\"BollingerBandsR@tv-basicstudies\"]);\n\nconst [mode, setMode] = useState(true);\nconst color = mode  ? 'light' : 'dark';\n\nconst navButtons = [{ text: 'ETH', symbol: sym[0], funct: function(){setCoin(this.symbol)} },\n                     { text: 'BTC', symbol: sym[1], funct: function(){setCoin(this.symbol)} },\n                     { text: 'BCH', symbol: sym[2], funct: function(){setCoin(this.symbol)} },\n                     { text: 'LTC', symbol: sym[3], funct: function(){setCoin(this.symbol)} },\n                     {text: '1 Indicators', indicators: indicsOne, funct: function(){setIndicator(this.indicators)}  },\n                    {text: '2 Indicators', indicators: indicsTwo, funct: function(){setIndicator(this.indicators)}  },\n                    {text: 'Short-Term'  , timeFrame: [timeFOne] , funct: function(){setTimeFrame(this.timeFrame)} },\n                    {text: 'Medium-Term' , timeFrame: ['30', '60', '120', 'D'], funct: function(){setTimeFrame(this.timeFrame)} },\n                    ]\n\nconst charts = [{ id:0, class:'chart-window', symbol:coin},\n                { id:1, class:'chart-window', symbol:coin}, \n                { id:2, class:'chart-window', symbol:coin}, \n                { id:3, class:'scalp-chart' , symbol:coin}]\n   \n return (\n\n<div className={\"App \" + color}>\n<nav className={\"navbar \" + color}>\n\n<span className={color} onClick={() => setMode( mode  ? false : true)}>{ mode ? 'Dark Mode' : 'Light Mode' }</span>\n\n{navButtons.map(coin => ( <span key={coin.text} className={color} onClick={() => coin.funct()} > {coin.text}</span>))}\n\n{links.map(link => (<a key={link.name} className={color} target=\"_tab\" href={link.name}> {link.text}</a>))}\n\n</nav>\n\n{charts.map( chart => (\n    \n<div key={chart.id} className={chart.class}>\n<TradingViewWidget\nsymbol={chart.symbol}\ntheme= {mode ?  'Light': 'Dark' }\nBarStyles='HEIKIN_ASHI'\nlocale=\"en\"\nStyle='8'\ninterval={timeFrame[chart.id]}\nstudies={indicators}  \nhide_side_toolbar={false}\nautosize = {true}        \n/>  \n</div>\n)) \n}\n\n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}