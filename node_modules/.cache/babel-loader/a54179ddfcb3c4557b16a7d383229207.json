{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/random-component/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/Inputting.jsx\";\nimport React from 'react';\nimport { useState, useRef } from 'react';\nimport moment from \"moment\";\nexport default function Example() {\n  const inputRef = useRef();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const handleAdd = () => {\n    const input = inputRef.current;\n    const time = moment().format(\"hh:mm\"); // RegExp pattern \n\n    const patt = new RegExp(/[0-9]/);\n    const check = patt.test(input.value);\n\n    if (input.value !== '' && check === true) {\n      const listItems = [input, time];\n      setList([...list, listItems]);\n    }\n\n    input.value = '';\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Amendment Input \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" Just numbers, 6 digits, cannot submit empty and remove values\"), React.createElement(\"input\", {\n    ref: inputRef,\n    maxLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" Add item\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, list.reverse().map((time, input, i) => React.createElement(\"li\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, time, \" \", input))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/Inputting.jsx"],"names":["React","useState","useRef","moment","Example","inputRef","list","setList","handleAdd","input","current","time","format","patt","RegExp","check","test","value","listItems","reverse","map","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;;AAF8B,oBAGND,QAAQ,CAAC,EAAD,CAHF;AAAA;AAAA,QAGvBK,IAHuB;AAAA,QAGjBC,OAHiB;;AAK9B,QAAMC,SAAS,GAAG,MAAM;AAEpB,UAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAvB;AACA,UAAMC,IAAI,GAAGR,MAAM,GAAGS,MAAT,CAAgB,OAAhB,CAAb,CAHoB,CAOpB;;AACA,UAAMC,IAAI,GAAG,IAAIC,MAAJ,CAAW,OAAX,CAAb;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACG,IAAL,CAAUP,KAAK,CAACQ,KAAhB,CAAd;;AAIA,QAAIR,KAAK,CAACQ,KAAN,KAAgB,EAAhB,IAAsBF,KAAK,KAAK,IAApC,EAAyC;AACvC,YAAMG,SAAS,GAAG,CAACT,KAAD,EAAQE,IAAR,CAAlB;AACEJ,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUY,SAAV,CAAD,CAAP;AACH;;AACCT,IAAAA,KAAK,CAACQ,KAAN,GAAc,EAAd;AACD,GAlBL;;AAoBA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFA,EAIA;AAAO,IAAA,GAAG,EAAEZ,QAAZ;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEG,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOF,IAAI,CAACa,OAAL,GAAeC,GAAf,CAAmB,CAACT,IAAD,EAAOF,KAAP,EAAcY,CAAd,KAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaV,IAAb,OAAoBF,KAApB,CADD,CADP,CAPA,CADA;AAgBH","sourcesContent":["import React from 'react';\nimport { useState, useRef} from 'react';\nimport moment from \"moment\";\n\nexport default function Example() {\n  \n    const inputRef = useRef();\n    const [list, setList] = useState([]);\n\n    const handleAdd = () => {\n\n        const input = inputRef.current;\n        const time = moment().format(\"hh:mm\")\n\n\n        \n        // RegExp pattern \n        const patt = new RegExp(/[0-9]/);\n        const check = patt.test(input.value);\n\n        \n    \n        if (input.value !== '' && check === true){\n          const listItems = [input, time]\n            setList([...list, listItems]);\n        }  \n          input.value = ''\n        };\n\n    return (\n    <div>\n    <h1> Amendment Input </h1>\n    <h3> Just numbers, 6 digits, cannot submit empty and remove values</h3>\n   \n    <input ref={inputRef}  maxLength='6'/>\n    <button type=\"submit\" onClick={handleAdd}> Add item</button>\n    \n    <ul>\n          {list.reverse().map((time, input, i) => (\n            <li key={i}>{time} {input}\n            </li>\n          ))}\n        </ul>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}