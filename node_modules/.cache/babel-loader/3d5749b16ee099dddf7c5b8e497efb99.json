{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/new-charts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/new-charts/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ScalpEth from './Components/ScalpEth';\nimport { useState } from 'react';\n\nfunction App() {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isToggleOnFour = _useState2[0],\n        setToggleFour = _useState2[1]; // const [chart, setChart] = useState(1)\n\n\n  const hanClickFour = () => {\n    setToggleFour(isToggleOnFour ? false : true);\n  };\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  console.log(ScalpEth);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"You clicked \", ScalpEth, \" times\", count < 5 ? React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Click me\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))), count === 2 ? React.createElement(ScalpEth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }) : false);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/new-charts/src/App.js"],"names":["React","ScalpEth","useState","App","isToggleOnFour","setToggleFour","hanClickFour","count","setCount","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAEyBD,QAAQ,CAAC,IAAD,CAFjC;AAAA;AAAA,QAERE,cAFQ;AAAA,QAEQC,aAFR,kBAIf;;;AAGA,QAAMC,YAAY,GAAG,MAAM;AAC3BD,IAAAA,aAAa,CAAED,cAAc,GAAI,KAAJ,GAAY,IAA5B,CAAb;AACC,GAFD;;AAPe,qBAWWF,QAAQ,CAAC,CAAD,CAXnB;AAAA;AAAA,QAWRK,KAXQ;AAAA,QAWDC,QAXC;;AAafC,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAGA,SAEA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBA,QAAhB,YACCM,KAAK,GAAG,CAAR,GAAY;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ,GAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,CADA,CALJ,EAaKA,KAAK,KAAK,CAAV,GAAc,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAA4B,KAbjC,CAFA;AAsBC;;AAED,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ScalpEth from './Components/ScalpEth';\nimport { useState } from 'react'\n\nfunction App() {\n\nconst [isToggleOnFour, setToggleFour] = useState(true)\n\n// const [chart, setChart] = useState(1)\n\n\nconst hanClickFour = () => {\nsetToggleFour( isToggleOnFour  ? false : true)\n}\n\nconst [count, setCount] = useState(1);\n\nconsole.log(ScalpEth)\n\n\nreturn (\n\n<div className=\"App\">\n<div className=\"Navbar\">\n\n</div >\n\n    <div>\n    <p>You clicked {ScalpEth} times\n    {count < 5 ? <button onClick={() => setCount(count + 1)}>\n      Click me\n    </button> : <span></span>}\n    </p>\n    </div>\n\n    {count === 2 ? <ScalpEth/> : false}\n\n    \n\n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}