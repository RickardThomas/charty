{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/i-code/3-darkened-charts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\nconst links = [{\n  id: 1,\n  text: 'CoinFarm',\n  name: \"https://coinfarm.online/index.asp?tcs=1h\"\n}, {\n  id: 3,\n  text: 'CMC',\n  name: \"https://coinmarketcap.com/\"\n}, {\n  id: 2,\n  text: 'Bitfinex',\n  name: \"https://www.bitfinex.com/trading\"\n}, {\n  id: 4,\n  text: 'Bids vs Sums',\n  name: \"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"\n}];\n\nfunction App() {\n  const _useState = useState(\"COINBASE:BTCEUR\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        coin = _useState2[0],\n        setCoin = _useState2[1];\n\n  const _useState3 = useState(['3', '15', '30', '180']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        timeFrame = _useState4[0],\n        setTimeFrame = _useState4[1];\n\n  const _useState5 = useState([\"BollingerBandsR@tv-basicstudies\"]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        indicators = _useState6[0],\n        setIndicator = _useState6[1];\n\n  const charts = [{\n    id: 1,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 3,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 2,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 4,\n    class: 'scalp-chart',\n    symbol: coin\n  }];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mode = _useState8[0],\n        setMode = _useState8[1];\n\n  const color = mode ? 'light' : 'dark';\n  const chartArray = [];\n  charts.forEach(chart => {\n    chartArray.push(React.createElement(\"div\", {\n      key: chart.id,\n      className: chart.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(TradingViewWidget, {\n      symbol: chart.symbol,\n      theme: mode ? 'Light' : 'Dark',\n      BarStyles: \"HEIKIN_ASHI\",\n      locale: \"en\",\n      Style: \"8\",\n      interval: timeFrame[chart.id],\n      studies: indicators,\n      hide_side_toolbar: false,\n      autosize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  });\n  return React.createElement(\"div\", {\n    className: \"App \" + color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar \" + color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: color,\n    onClick: () => setMode(mode ? false : true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, mode ? 'Dark Mode' : 'Light Mode'), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setCoin(\"COINBASE:ETHEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"ETH\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setCoin(\"COINBASE:BTCEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"BTC\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setCoin(\"COINBASE:BCHEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"BCH\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setCoin(\"COINBASE:LTCEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"LTC\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setTimeFrame(['3', '15', '30', '180']),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Short-Term\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setTimeFrame(['30', '60', '180', 'D']),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" Mid-Term\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setIndicator([\"MAVolumeWeighted@tv-basicstudies\", \"RSI@tv-basicstudies\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"1 Indicators\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setIndicator([\"RSI@tv-basicstudies\", \"CMF@tv-basicstudies\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"2 Indicators\"), links.map(link => React.createElement(\"a\", {\n    className: color,\n    target: \"_tab\",\n    href: link.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" \", link.text))), chartArray);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js"],"names":["React","useState","TradingViewWidget","links","id","text","name","App","coin","setCoin","timeFrame","setTimeFrame","indicators","setIndicator","charts","class","symbol","mode","setMode","color","chartArray","forEach","chart","push","map","link"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState } from 'react'\nimport TradingViewWidget from 'react-tradingview-widget';\n\nconst links = [\n    { id:1, text: 'CoinFarm'      ,name:\"https://coinfarm.online/index.asp?tcs=1h\"},\n    { id:3, text: 'CMC'           ,name:\"https://coinmarketcap.com/\" }, \n    { id:2, text: 'Bitfinex'      ,name: \"https://www.bitfinex.com/trading\"}, \n    { id:4, text: 'Bids vs Sums' ,name:\"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"}\n]\n\nfunction App() {\n\nconst [coin, setCoin] = useState(\"COINBASE:BTCEUR\");\nconst [timeFrame, setTimeFrame] = useState(['3', '15', '30' , '180'])\nconst [indicators, setIndicator] = useState([\"BollingerBandsR@tv-basicstudies\"]);\n\n\nconst charts = [ \n    { id:1, class:'chart-window', symbol:coin},\n    { id:3, class:'chart-window', symbol:coin}, \n    { id:2, class:'chart-window', symbol:coin}, \n    { id:4, class:'scalp-chart' , symbol:coin}\n]\n   \nconst [mode, setMode] = useState(true);\nconst color = mode  ? 'light' : 'dark';\n\n        const chartArray = []\n\n        charts.forEach( chart => {\n        chartArray.push( \n\n        <div key={chart.id} className={chart.class}>\n        <TradingViewWidget\n        symbol={chart.symbol}\n        theme= {mode ?  'Light': 'Dark' }\n        BarStyles='HEIKIN_ASHI'\n        locale=\"en\"\n        Style='8'\n        interval={timeFrame[chart.id]}\n        studies={indicators}  \n        hide_side_toolbar={false}\n        autosize = {true}        \n        />  \n        </div>\n        )}) \n\n return (\n\n<div className={\"App \" + color}>\n<nav className={\"navbar \" +  color}>\n\n<span className={color} onClick={() => setMode( mode  ? false : true)}>{ mode ? 'Dark Mode' : 'Light Mode' }</span>\n\n<span className={color} onClick={() => setCoin(\"COINBASE:ETHEUR\")}>ETH</span>\n<span className={color} onClick={() => setCoin(\"COINBASE:BTCEUR\")}>BTC</span>\n<span className={color} onClick={() => setCoin(\"COINBASE:BCHEUR\")}>BCH</span>\n<span className={color} onClick={() => setCoin(\"COINBASE:LTCEUR\")}>LTC</span>\n\n<span className={color} onClick={() => setTimeFrame(['3', '15', '30', '180'])}>Short-Term</span>\n<span className={color} onClick={() => setTimeFrame(['30', '60', '180', 'D'])}> Mid-Term</span>\n\n<span className={color} onClick={() => setIndicator([ \"MAVolumeWeighted@tv-basicstudies\", \"RSI@tv-basicstudies\"])}>1 Indicators</span>\n<span className={color} onClick={() => setIndicator([ \"RSI@tv-basicstudies\", \"CMF@tv-basicstudies\"])}>2 Indicators</span>\n{/* add links */}\n\n\n{ links.map(link => (\n    <a className={color} target=\"_tab\" href={link.name}> {link.text}</a>\n))}\n\n</nav>\n\n\n{chartArray}\n\n\n\n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}