{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/random-component/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/Inputting.jsx\";\nimport React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nexport default function Example() {\n  const inputRef = useRef();\n\n  const _useState = useState([localStorage.getItem(ListItems)]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const handleAdd = () => {\n    const input = inputRef.current;\n    const iteming = input.value; // RegExp pattern if there are numbers\n\n    const patt = new RegExp(/[0-9]/);\n    const check = patt.test(iteming);\n\n    if (input.value !== '' && check === true) {\n      setList([...list, iteming]);\n      localStorage.setItem('ListItems', iteming);\n    }\n\n    input.value = '';\n  }; // useEffect(() => {\n  //   localStorage.setItem('input.value', JSON.stringify(input.value) )\n  // }, [item]);\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" Amendment Input \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" Just numbers, 6 digits, cannot submit empty and remove values\"), React.createElement(\"input\", {\n    ref: inputRef,\n    maxLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" Add item\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, list.reverse().map((item, i) => React.createElement(\"li\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, item))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/Inputting.jsx"],"names":["React","useState","useRef","useEffect","Example","inputRef","localStorage","getItem","ListItems","list","setList","handleAdd","input","current","iteming","value","patt","RegExp","check","test","setItem","reverse","map","item","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA2C,OAA3C;AAEA,eAAe,SAASC,OAAT,GAAmB;AAG9B,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;;AAH8B,oBAKND,QAAQ,CAAC,CAACK,YAAY,CAACC,OAAb,CAAqBC,SAArB,CAAD,CAAD,CALF;AAAA;AAAA,QAKvBC,IALuB;AAAA,QAKjBC,OALiB;;AAO9B,QAAMC,SAAS,GAAG,MAAM;AAEpB,UAAMC,KAAK,GAAGP,QAAQ,CAACQ,OAAvB;AACA,UAAMC,OAAO,GAAGF,KAAK,CAACG,KAAtB,CAHoB,CAIpB;;AACA,UAAMC,IAAI,GAAG,IAAIC,MAAJ,CAAW,OAAX,CAAb;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACG,IAAL,CAAUL,OAAV,CAAd;;AAEA,QAAIF,KAAK,CAACG,KAAN,KAAgB,EAAhB,IAAsBG,KAAK,KAAK,IAApC,EAAyC;AACrCR,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUK,OAAV,CAAD,CAAP;AACAR,MAAAA,YAAY,CAACc,OAAb,CAAqB,WAArB,EAAkCN,OAAlC;AACH;;AACCF,IAAAA,KAAK,CAACG,KAAN,GAAc,EAAd;AACD,GAbL,CAP8B,CAuB9B;AACA;AAEA;;;AAEA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFA,EAIA;AAAO,IAAA,GAAG,EAAEV,QAAZ;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEM,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOF,IAAI,CAACY,OAAL,GAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,KAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,IAAb,CADD,CADP,CAPA,CADA;AAgBH","sourcesContent":["import React from 'react';\nimport { useState, useRef, useEffect} from 'react';\n\nexport default function Example() {\n  \n\n    const inputRef = useRef();\n    \n    const [list, setList] = useState([localStorage.getItem(ListItems)]);\n\n    const handleAdd = () => {\n\n        const input = inputRef.current;\n        const iteming = input.value;\n        // RegExp pattern if there are numbers\n        const patt = new RegExp(/[0-9]/);\n        const check = patt.test(iteming);\n    \n        if (input.value !== '' && check === true){\n            setList([...list, iteming]);\n            localStorage.setItem('ListItems', iteming)\n        }  \n          input.value = ''\n        };\n\n\n    // useEffect(() => {\n    //   localStorage.setItem('input.value', JSON.stringify(input.value) )\n      \n    // }, [item]);\n\n    return (\n    <div>\n    <h1> Amendment Input </h1>\n    <h3> Just numbers, 6 digits, cannot submit empty and remove values</h3>\n   \n    <input ref={inputRef}  maxLength='6'/>\n    <button type=\"submit\" onClick={handleAdd}> Add item</button>\n    \n    <ul>\n          {list.reverse().map((item, i) => (\n            <li key={i}>{item}\n            </li>\n          ))}\n        </ul>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}