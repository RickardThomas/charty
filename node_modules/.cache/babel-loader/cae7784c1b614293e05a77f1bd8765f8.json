{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/cv 2020/Projects for GitHub/charting-dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/cv 2020/Projects for GitHub/charting-dashboard/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\n\nfunction App() {\n  const _useState = useState(\"COINBASE:BTCEUR\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        coiny = _useState2[0],\n        setCoiny = _useState2[1];\n\n  const _useState3 = useState(['3', '15', '45', '180']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        timeFrame = _useState4[0],\n        setTimeFrame = _useState4[1];\n\n  const _useState5 = useState([\"BollingerBandsR@tv-basicstudies\"]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        indicators = _useState6[0],\n        setIndicator = _useState6[1];\n\n  const _useState7 = useState('Light'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mode = _useState8[0],\n        setMode = _useState8[1];\n\n  const makeDark = () => {\n    setMode(mode ? 'Light' : 'Dark');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setCoiny(\"COINBASE:ETHEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"ETH\"), React.createElement(\"button\", {\n    onClick: () => setCoiny(\"COINBASE:BTCEUR\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"BTC\"), React.createElement(\"button\", {\n    onClick: () => setTimeFrame(['3', '15', '45', '180']),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" Short-term\"), React.createElement(\"button\", {\n    onClick: () => setTimeFrame(['45', '60', '180', 'D']),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" Medium-term\"), React.createElement(\"button\", {\n    onClick: () => setIndicator([\"MAVolumeWeighted@tv-basicstudies\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"VWMA\"), React.createElement(\"button\", {\n    onClick: makeDark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, mode ? 'Light' : 'Dark'), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    target: \"_tab\",\n    href: \"https://coinfarm.online/index.asp?tcs=1h\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"CoinFarm\")), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    target: \"_tab\",\n    href: \"https://coinmarketcap.com/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"CMC\")), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    target: \"_tab\",\n    href: \"https://www.bitfinex.com/trading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Bitfinex\")), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    target: \"_tab\",\n    href: \"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" Bids vs Sums\"))), React.createElement(\"div\", {\n    className: \"chart-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: coiny,\n    theme: mode,\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: timeFrame[0],\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"chart-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: coiny,\n    theme: mode,\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: timeFrame[1],\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"chart-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: coiny,\n    theme: mode,\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: timeFrame[2],\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"scalp-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: coiny,\n    theme: 'Dark',\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: timeFrame[3],\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/cv 2020/Projects for GitHub/charting-dashboard/src/App.js"],"names":["React","useState","TradingViewWidget","App","coiny","setCoiny","timeFrame","setTimeFrame","indicators","setIndicator","mode","setMode","makeDark"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState } from 'react'\nimport TradingViewWidget from 'react-tradingview-widget';\n\nfunction App() {\n\nconst [coiny, setCoiny] = useState(\"COINBASE:BTCEUR\");\nconst [timeFrame, setTimeFrame] = useState(['3', '15', '45' , '180'])\nconst [indicators, setIndicator] = useState([\"BollingerBandsR@tv-basicstudies\"]);\n\nconst [mode, setMode] = useState('Light');\n\nconst makeDark = () => {\n  setMode(  mode  ? 'Light' : 'Dark');\n}\n\n\n\n\nreturn (\n\n<div className=\"App\">\n\n<div className=\"Navbar\">\n\n<button onClick={() => setCoiny(\"COINBASE:ETHEUR\")}>ETH</button>\n<button onClick={() => setCoiny(\"COINBASE:BTCEUR\")}>BTC</button>\n\n<button onClick={() => setTimeFrame( [ '3', '15', '45' , '180'])}> Short-term</button>\n<button onClick={() => setTimeFrame([ '45', '60', '180' , 'D'])}> Medium-term</button>\n\n<button onClick={() => setIndicator([ \"MAVolumeWeighted@tv-basicstudies\"])}>VWMA</button>\n\n<button onClick={makeDark}>{ mode ? 'Light': 'Dark' }</button>\n\n{/* add links */}\n<button><a target=\"_tab\"  href=\"https://coinfarm.online/index.asp?tcs=1h\">CoinFarm</a></button>\n<button><a target=\"_tab\" href=\"https://coinmarketcap.com/\">CMC</a></button>\n<button><a target=\"_tab\" href=\"https://www.bitfinex.com/trading\">Bitfinex</a></button>\n<button><a target=\"_tab\" href=\"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"> Bids vs Sums</a></button>\n\n\n</div >\n\n<div className=\"chart-window\">\n\n    <TradingViewWidget\n    symbol={coiny}\n    theme= {mode}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    Style='8'\n    interval={timeFrame[0]}\n    studies={indicators}  \n    hide_side_toolbar={false}\n    autosize      \n    /> \n\n</div>\n\n<div className=\"chart-window\">\n\n    <TradingViewWidget\n    symbol={coiny}\n    theme= {mode}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    Style='8'\n    interval={timeFrame[1]}\n    studies={indicators}  \n    hide_side_toolbar={false}\n    autosize      \n    /> \n\n</div>\n\n<div className=\"chart-window\">\n\n    <TradingViewWidget\n    symbol={coiny}\n    theme= {mode}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    Style='8'\n    interval={timeFrame[2]}\n    studies={indicators}  \n    hide_side_toolbar={false}\n    autosize      \n    /> \n  \n </div>\n\n<div className=\"scalp-chart\">\n\n    <TradingViewWidget\n    symbol={coiny}\n    theme= {'Dark'}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    Style='8'\n    interval={timeFrame[3]}\n    studies={indicators}  \n    hide_side_toolbar={false}\n    autosize      \n    /> \n\n</div>\n\n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}