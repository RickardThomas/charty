{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/i-code/3-darkened-charts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\nconst links = [{\n  id: 0,\n  text: 'CoinFarm',\n  name: \"https://coinfarm.online/index.asp?tcs=1h\"\n}, {\n  id: 1,\n  text: 'CMC',\n  name: \"https://coinmarketcap.com/\"\n}, {\n  id: 2,\n  text: 'Bitfinex',\n  name: \"https://www.bitfinex.com/trading\"\n}, {\n  id: 3,\n  text: 'Bids vs Sums',\n  name: \"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"\n}];\n\nfunction App() {\n  const _useState = useState(\"COINBASE:BTCEUR\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        coin = _useState2[0],\n        setCoin = _useState2[1];\n\n  const _useState3 = useState(['3', '15', '30', '180']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        timeFrame = _useState4[0],\n        setTimeFrame = _useState4[1];\n\n  const _useState5 = useState([\"BollingerBandsR@tv-basicstudies\"]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        indicators = _useState6[0],\n        setIndicator = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mode = _useState8[0],\n        setMode = _useState8[1];\n\n  const color = mode ? 'light' : 'dark';\n  const sym = [\"COINBASE:ETHEUR\", \"COINBASE:BTCEUR\", \"COINBASE:BCHEUR\", \"COINBASE:LTCEUR\"];\n  const indicsOne = [\"RSI@tv-basicstudies\", \"CMF@tv-basicstudies\"];\n  const indicsTwo = [\"MAVolumeWeighted@tv-basicstudies\", \"BollingerBandsR@tv-basicstudies\"];\n  const timeFramesOne = ['1', '15', '30', '180'];\n  const timeFramesTwo = ['60', '120', '180', 'D'];\n  const coinButtons = [{\n    text: 'ETH',\n    symbol: sym[0],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: 'BTC',\n    symbol: sym[1],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: 'BCH',\n    symbol: sym[2],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: 'LTC',\n    symbol: sym[3],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: '1 Indicators',\n    indicators: indicsOne,\n    funct: function () {\n      setIndicator(this.indicators);\n    }\n  }, {\n    text: '2 Indicators',\n    indicators: indicsTwo,\n    funct: function () {\n      setIndicator(this.indicators);\n    }\n  }, {\n    text: 'Short-Term',\n    timeFrame: [timeFramesOne],\n    funct: function () {\n      setTimeFrame(this.timeFrame);\n    }\n  }, {\n    text: 'Medium-Term',\n    timeFrame: [timeFramesTwo],\n    funct: function () {\n      setTimeFrame(this.timeFrame);\n    }\n  }];\n  const charts = [{\n    id: 0,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 1,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 2,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 3,\n    class: 'scalp-chart',\n    symbol: coin\n  }];\n  return React.createElement(\"div\", {\n    className: \"App \" + color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar \" + color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: color,\n    onClick: () => setMode(mode ? false : true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, mode ? 'Dark Mode' : 'Light Mode'), coinButtons.map(coin => React.createElement(\"span\", {\n    key: coin.text,\n    className: color,\n    onClick: () => coin.funct(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" \", coin.text)), links.map(link => React.createElement(\"a\", {\n    key: link.name,\n    className: color,\n    target: \"_tab\",\n    href: link.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", link.text))), charts.map(chart => React.createElement(\"div\", {\n    key: chart.id,\n    className: chart.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: chart.symbol,\n    theme: mode ? 'Light' : 'Dark',\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: timeFrame[chart.id],\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js"],"names":["React","useState","TradingViewWidget","links","id","text","name","App","coin","setCoin","timeFrame","setTimeFrame","indicators","setIndicator","mode","setMode","color","sym","indicsOne","indicsTwo","timeFramesOne","timeFramesTwo","coinButtons","symbol","funct","charts","class","map","link","chart"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState } from 'react'\nimport TradingViewWidget from 'react-tradingview-widget';\n\nconst links = [ { id:0, text: 'CoinFarm'     ,name:\"https://coinfarm.online/index.asp?tcs=1h\"},\n                { id:1, text: 'CMC'          ,name:\"https://coinmarketcap.com/\" }, \n                { id:2, text: 'Bitfinex'     ,name: \"https://www.bitfinex.com/trading\"}, \n                { id:3, text: 'Bids vs Sums' ,name:\"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"}]\n\nfunction App() {\n\nconst [coin, setCoin] = useState(\"COINBASE:BTCEUR\");\nconst [timeFrame, setTimeFrame] = useState(['3', '15', '30' , '180'])\n\nconst [indicators, setIndicator] = useState([\"BollingerBandsR@tv-basicstudies\"]);\n\nconst [mode, setMode] = useState(true);\nconst color = mode  ? 'light' : 'dark';\n\nconst sym = [\"COINBASE:ETHEUR\", \"COINBASE:BTCEUR\", \"COINBASE:BCHEUR\",  \"COINBASE:LTCEUR\" ]\nconst indicsOne = [ \"RSI@tv-basicstudies\",  \"CMF@tv-basicstudies\"]\nconst indicsTwo = [ \"MAVolumeWeighted@tv-basicstudies\", \"BollingerBandsR@tv-basicstudies\"]\n\n const timeFramesOne = ['1', '15', '30', '180']\n const timeFramesTwo = ['60', '120', '180', 'D']\n\nconst coinButtons = [{ text: 'ETH', symbol: sym[0], funct: function(){setCoin(this.symbol)} },\n                     { text: 'BTC', symbol: sym[1], funct: function(){setCoin(this.symbol)} },\n                     { text: 'BCH', symbol: sym[2], funct: function(){setCoin(this.symbol)} },\n                     { text: 'LTC', symbol: sym[3], funct: function(){setCoin(this.symbol)} },\n\n                    {text: '1 Indicators', indicators: indicsOne, funct: function(){setIndicator(this.indicators)}  },\n                    {text: '2 Indicators', indicators: indicsTwo, funct: function(){setIndicator(this.indicators)}  },\n                    {text: 'Short-Term',   timeFrame: [timeFramesOne], funct: function(){setTimeFrame(this.timeFrame)} },\n                    {text: 'Medium-Term',  timeFrame: [timeFramesTwo], funct: function(){setTimeFrame(this.timeFrame)} },\n                    ]\n\n                    const charts = [ \n                    { id:0, class:'chart-window', symbol:coin},\n                    { id:1, class:'chart-window', symbol:coin}, \n                    { id:2, class:'chart-window', symbol:coin}, \n                    { id:3, class:'scalp-chart' , symbol:coin}]\n   \n return (\n\n<div className={\"App \" + color}>\n<nav className={\"navbar \" +  color}>\n\n<span className={color} onClick={() => setMode( mode  ? false : true)}>{ mode ? 'Dark Mode' : 'Light Mode' }</span>\n\n{coinButtons.map(coin => ( <span key={coin.text} className={color} onClick={() => coin.funct()} > {coin.text}</span>))}\n\n{links.map(link => (<a key={link.name} className={color} target=\"_tab\" href={link.name}> {link.text}</a>))}\n\n</nav>\n\n{charts.map( chart => (\n\n<div key={chart.id} className={chart.class}>\n\n<TradingViewWidget\nsymbol={chart.symbol}\ntheme= {mode ?  'Light': 'Dark' }\nBarStyles='HEIKIN_ASHI'\nlocale=\"en\"\nStyle='8'\ninterval={timeFrame[chart.id]}\nstudies={indicators}  \nhide_side_toolbar={false}\nautosize = {true}        \n/>  \n</div>\n)) \n}\n\n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}