{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/i-code/3-darkened-charts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\nconst links = [{\n  id: 1,\n  text: 'CoinFarm',\n  name: \"https://coinfarm.online/index.asp?tcs=1h\"\n}, {\n  id: 3,\n  text: 'CMC',\n  name: \"https://coinmarketcap.com/\"\n}, {\n  id: 2,\n  text: 'Bitfinex',\n  name: \"https://www.bitfinex.com/trading\"\n}, {\n  id: 4,\n  text: 'Bids vs Sums',\n  name: \"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"\n}];\nconst coinButtons = [{\n  id: 1,\n  name: 'ETH',\n  symbol: \"COINBASE:ETHEUR\"\n}, {\n  id: 3,\n  name: 'BTC',\n  symbol: \"COINBASE:BTCEUR\"\n}, {\n  id: 2,\n  name: 'BCH',\n  symbol: \"COINBASE:BCHEUR\"\n}, {\n  id: 4,\n  name: 'LTC',\n  symbol: \"COINBASE:LTCEUR\"\n}];\nconst charts = [{\n  id: 1,\n  class: 'chart-window',\n  symbol: coin\n}, {\n  id: 3,\n  class: 'chart-window',\n  symbol: coin\n}, {\n  id: 2,\n  class: 'chart-window',\n  symbol: coin\n}, {\n  id: 4,\n  class: 'scalp-chart',\n  symbol: coin\n}];\n\nfunction App() {\n  const _useState = useState(\"COINBASE:BTCEUR\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        coin = _useState2[0],\n        setCoin = _useState2[1];\n\n  const _useState3 = useState(['3', '15', '30', '180']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        timeFrame = _useState4[0],\n        setTimeFrame = _useState4[1];\n\n  const _useState5 = useState([\"BollingerBandsR@tv-basicstudies\"]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        indicators = _useState6[0],\n        setIndicator = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mode = _useState8[0],\n        setMode = _useState8[1];\n\n  const color = mode ? 'light' : 'dark';\n  return React.createElement(\"div\", {\n    className: \"App \" + color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar \" + color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: color,\n    onClick: () => setMode(mode ? false : true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, mode ? 'Dark Mode' : 'Light Mode'), coinButtons.map(coin => React.createElement(\"span\", {\n    key: coin.id,\n    className: color,\n    onClick: () => setCoin(coin.symbol),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" \", coin.name)), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setTimeFrame(['3', '15', '30', '180']),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Short-Term\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setTimeFrame(['30', '60', '180', 'D']),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" Mid-Term\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setIndicator([\"MAVolumeWeighted@tv-basicstudies\", \"RSI@tv-basicstudies\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"1 Indicators\"), React.createElement(\"span\", {\n    className: color,\n    onClick: () => setIndicator([\"RSI@tv-basicstudies\", \"CMF@tv-basicstudies\"]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"2 Indicators\"), links.map(link => React.createElement(\"a\", {\n    className: color,\n    target: \"_tab\",\n    href: link.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" \", link.text))), charts.map(chart => React.createElement(\"div\", {\n    key: chart.id,\n    className: chart.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: chart.symbol,\n    theme: mode ? 'Light' : 'Dark',\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: timeFrame[chart.id],\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js"],"names":["React","useState","TradingViewWidget","links","id","text","name","coinButtons","symbol","charts","class","coin","App","setCoin","timeFrame","setTimeFrame","indicators","setIndicator","mode","setMode","color","map","link","chart"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState } from 'react'\nimport TradingViewWidget from 'react-tradingview-widget';\n\nconst links = [ { id:1, text: 'CoinFarm'     ,name:\"https://coinfarm.online/index.asp?tcs=1h\"},\n                { id:3, text: 'CMC'          ,name:\"https://coinmarketcap.com/\" }, \n                { id:2, text: 'Bitfinex'     ,name: \"https://www.bitfinex.com/trading\"}, \n                { id:4, text: 'Bids vs Sums' ,name:\"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"}]\n\n\nconst coinButtons = [{ id:1, name: 'ETH', symbol: \"COINBASE:ETHEUR\"},\n                     { id:3, name: 'BTC', symbol: \"COINBASE:BTCEUR\"},\n                     { id:2, name: 'BCH', symbol: \"COINBASE:BCHEUR\"},\n                     { id:4, name: 'LTC', symbol: \"COINBASE:LTCEUR\"},\n                    ]\n\n                    const charts = [ \n                        { id:1, class:'chart-window', symbol:coin},\n                        { id:3, class:'chart-window', symbol:coin}, \n                        { id:2, class:'chart-window', symbol:coin}, \n                        { id:4, class:'scalp-chart' , symbol:coin}]\n\n\nfunction App() {\n\nconst [coin, setCoin] = useState(\"COINBASE:BTCEUR\");\nconst [timeFrame, setTimeFrame] = useState(['3', '15', '30' , '180'])\nconst [indicators, setIndicator] = useState([\"BollingerBandsR@tv-basicstudies\"]);\n\n\n\n   \nconst [mode, setMode] = useState(true);\nconst color = mode  ? 'light' : 'dark';\n\n return (\n\n<div className={\"App \" + color}>\n<nav className={\"navbar \" +  color}>\n\n<span className={color} onClick={() => setMode( mode  ? false : true)}>{ mode ? 'Dark Mode' : 'Light Mode' }</span>\n\n{ coinButtons.map(coin => ( <span key={coin.id} className={color} onClick={() => setCoin(coin.symbol)} > {coin.name}</span>))}\n\n<span className={color} onClick={() => setTimeFrame(['3', '15', '30', '180'])}>Short-Term</span>\n<span className={color} onClick={() => setTimeFrame(['30', '60', '180', 'D'])}> Mid-Term</span>\n\n<span className={color} onClick={() => setIndicator([ \"MAVolumeWeighted@tv-basicstudies\", \"RSI@tv-basicstudies\"])}>1 Indicators</span>\n<span className={color} onClick={() => setIndicator([ \"RSI@tv-basicstudies\", \"CMF@tv-basicstudies\"])}>2 Indicators</span>\n{/* add links */}\n\n{ links.map(link => ( <a className={color} target=\"_tab\" href={link.name}> {link.text}</a>))}\n\n</nav>\n\n{charts.map( chart => (\n\n<div key={chart.id} className={chart.class}>\n\n<TradingViewWidget\nsymbol={chart.symbol}\ntheme= {mode ?  'Light': 'Dark' }\nBarStyles='HEIKIN_ASHI'\nlocale=\"en\"\nStyle='8'\ninterval={timeFrame[chart.id]}\nstudies={indicators}  \nhide_side_toolbar={false}\nautosize = {true}        \n/>  \n</div>\n)) \n}\n\n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}