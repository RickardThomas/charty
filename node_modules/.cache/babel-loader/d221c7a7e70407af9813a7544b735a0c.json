{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/random-component/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/Inputting.jsx\";\nimport React from 'react';\nimport { useState, useRef } from 'react';\nexport default function Example() {\n  const inputRef = useRef();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const handleAdd = () => {\n    const input = inputRef.current;\n    const check = input.value;\n    var str = \"The best things in life are free\";\n    var patt = new RegExp(/[0-9]/);\n    var res = patt.test(str);\n    const patt1 = /[0-9]/;\n\n    if (check.match(patt1)) {\n      console.log(check);\n    }\n\n    console.log(input.value);\n\n    if (input.value !== '') {\n      setList([...list, input.value]);\n    }\n\n    input.value = '';\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" Amendment Input \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" Just numbers, 6 digits, cannot submit empty and remove values\"), React.createElement(\"input\", {\n    ref: inputRef,\n    maxLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Add item\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, list.reverse().map((item, i) => React.createElement(\"li\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, item))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/Inputting.jsx"],"names":["React","useState","useRef","Example","inputRef","list","setList","handleAdd","input","current","check","value","str","patt","RegExp","res","test","patt1","match","console","log","reverse","map","item","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAgC,OAAhC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGF,MAAM,EAAvB;;AAF8B,oBAGND,QAAQ,CAAC,EAAD,CAHF;AAAA;AAAA,QAGvBI,IAHuB;AAAA,QAGjBC,OAHiB;;AAK9B,QAAMC,SAAS,GAAG,MAAM;AAEpB,UAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAvB;AAEA,UAAMC,KAAK,GAAGF,KAAK,CAACG,KAApB;AAEA,QAAIC,GAAG,GAAG,kCAAV;AAEA,QAAIC,IAAI,GAAG,IAAIC,MAAJ,CAAW,OAAX,CAAX;AACA,QAAIC,GAAG,GAAGF,IAAI,CAACG,IAAL,CAAUJ,GAAV,CAAV;AAEA,UAAMK,KAAK,GAAG,OAAd;;AACA,QAAIP,KAAK,CAACQ,KAAN,CAAYD,KAAZ,CAAJ,EAAuB;AACnBE,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACH;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACG,KAAlB;;AACA,QAAIH,KAAK,CAACG,KAAN,KAAgB,EAApB,EAAuB;AACnBL,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUG,KAAK,CAACG,KAAhB,CAAD,CAAP;AACH;;AACCH,IAAAA,KAAK,CAACG,KAAN,GAAc,EAAd;AACD,GApBL;;AAsBA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFA,EAIA;AAAO,IAAA,GAAG,EAAEP,QAAZ;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEG,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOF,IAAI,CAACgB,OAAL,GAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,KAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,IAAb,CADD,CADP,CAPA,CADA;AAgBH","sourcesContent":["import React from 'react';\nimport { useState, useRef} from 'react';\n\nexport default function Example() {\n  \n    const inputRef = useRef();\n    const [list, setList] = useState([]);\n\n    const handleAdd = () => {\n\n        const input = inputRef.current;\n        \n        const check = input.value\n\n        var str = \"The best things in life are free\";\n\n        var patt = new RegExp(/[0-9]/);\n        var res = patt.test(str);\n\n        const patt1 = /[0-9]/;\n        if (check.match(patt1)){\n            console.log(check)\n        }\n        console.log(input.value)\n        if (input.value !== ''){\n            setList([...list, input.value]);\n        }  \n          input.value = ''\n        };\n\n    return (\n    <div>\n    <h1> Amendment Input </h1>\n    <h3> Just numbers, 6 digits, cannot submit empty and remove values</h3>\n   \n    <input ref={inputRef}  maxLength='6'/>\n    <button type=\"submit\" onClick={handleAdd}> Add item</button>\n    \n    <ul>\n          {list.reverse().map((item, i) => (\n            <li key={i}>{item}\n            </li>\n          ))}\n        </ul>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}