{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/random-component/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/ReduceArea.jsx\";\nimport React from 'react';\nimport { useState } from 'react';\nexport default function GetCoordinates() {\n  // uses onMouseMove, window.event.client \n  const _useState = useState(window.innerWidth),\n        _useState2 = _slicedToArray(_useState, 2),\n        width = _useState2[0],\n        setWidth = _useState2[1];\n\n  const _useState3 = useState(window.innerHeight),\n        _useState4 = _slicedToArray(_useState3, 2),\n        height = _useState4[0],\n        setHeight = _useState4[1];\n\n  const _useState5 = useState(window.clientX),\n        _useState6 = _slicedToArray(_useState5, 2),\n        x = _useState6[0],\n        setX = _useState6[1];\n\n  const _useState7 = useState(window.clientY),\n        _useState8 = _slicedToArray(_useState7, 2),\n        y = _useState8[0],\n        setY = _useState8[1];\n\n  window.onresize = () => {\n    setHeight(window.innerHeight);\n    setWidth(window.innerWidth);\n  };\n\n  const showCoords = () => {\n    setX(window.event.clientX);\n    setY(window.event.clientY);\n  };\n\n  return React.createElement(\"div\", {\n    onMouseMove: showCoords,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" coordinates for X =   \", x, \" coordinates for Y : \", y, \" of mouse\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" Total area of window in px \", width * height), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" Width: \", width, \" \"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" Height:  \", height, \" \"));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/ReduceArea.jsx"],"names":["React","useState","GetCoordinates","window","innerWidth","width","setWidth","innerHeight","height","setHeight","clientX","x","setX","clientY","y","setY","onresize","showCoords","event"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,cAAT,GAA0B;AAErC;AAFqC,oBAIZD,QAAQ,CAACE,MAAM,CAACC,UAAR,CAJI;AAAA;AAAA,QAI/BC,KAJ+B;AAAA,QAIxBC,QAJwB;;AAAA,qBAKVL,QAAQ,CAACE,MAAM,CAACI,WAAR,CALE;AAAA;AAAA,QAK/BC,MAL+B;AAAA,QAKvBC,SALuB;;AAAA,qBAOpBR,QAAQ,CAACE,MAAM,CAACO,OAAR,CAPY;AAAA;AAAA,QAO/BC,CAP+B;AAAA,QAO5BC,IAP4B;;AAAA,qBAQpBX,QAAQ,CAACE,MAAM,CAACU,OAAR,CARY;AAAA;AAAA,QAQ/BC,CAR+B;AAAA,QAQ5BC,IAR4B;;AAUrCZ,EAAAA,MAAM,CAACa,QAAP,GAAkB,MAAM;AACpBP,IAAAA,SAAS,CAACN,MAAM,CAACI,WAAR,CAAT;AACAD,IAAAA,QAAQ,CAACH,MAAM,CAACC,UAAR,CAAR;AACH,GAHD;;AAKA,QAAMa,UAAU,GAAG,MAAM;AACrBL,IAAAA,IAAI,CAACT,MAAM,CAACe,KAAP,CAAaR,OAAd,CAAJ;AACAK,IAAAA,IAAI,CAACZ,MAAM,CAACe,KAAP,CAAaL,OAAd,CAAJ;AACH,GAHD;;AAKA,SACA;AAAK,IAAA,WAAW,EAAEI,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA6BN,CAA7B,2BAAuDG,CAAvD,cAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAiCT,KAAK,GAAGG,MAAzC,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaH,KAAb,MAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeG,MAAf,MALA,CADA;AAUH","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nexport default function GetCoordinates() {\n\n    // uses onMouseMove, window.event.client \n    \n    const[width, setWidth] = useState(window.innerWidth);\n    const[height, setHeight] = useState(window.innerHeight);\n\n    const[x, setX] = useState(window.clientX);\n    const[y, setY] = useState(window.clientY);\n    \n    window.onresize = () => {\n        setHeight(window.innerHeight)\n        setWidth(window.innerWidth)\n    }\n \n    const showCoords = () => {\n        setX(window.event.clientX)\n        setY(window.event.clientY)\n    }\n\n    return (\n    <div onMouseMove={showCoords}>\n    \n    <h2> coordinates for X =   { x } coordinates for Y : { y } of mouse</h2>\n    <h2> Total area of window in px {width * height}</h2>\n    <h2> Width: {width} </h2>\n    <h2> Height:  {height} </h2>\n\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}