{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/i-code/3-darkened-charts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\nconst links = [{\n  text: 'CoinFarm',\n  name: \"https://coinfarm.online/index.asp?tcs=1h\"\n}, {\n  text: 'CMC',\n  name: \"https://coinmarketcap.com/\"\n}, {\n  text: 'Bitfinex',\n  name: \"https://www.bitfinex.com/trading\"\n}, {\n  text: 'Bids vs Sums',\n  name: \"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"\n}];\nconst indicsOne = [[\"MAVolumeWeighted@tv-basicstudies\", \"BollingerBandsR@tv-basicstudies\"], [\"RSI@tv-basicstudies\", \"CMF@tv-basicstudies\"]];\nconst sym = [\"COINBASE:ETHEUR\", \"COINBASE:BTCEUR\", \"COINBASE:BCHEUR\", \"COINBASE:LTCEUR\"];\nconst timeFrames = ['3', '15', '30', '180'];\nconst timeFramesTwo = ['1', '30', '60', '180'];\nconst timeFramesThree = ['30', '60', '120', 'D'];\n\nfunction App() {\n  const _useState = useState(sym[1]),\n        _useState2 = _slicedToArray(_useState, 2),\n        coin = _useState2[0],\n        setCoin = _useState2[1];\n\n  const _useState3 = useState(timeFrames),\n        _useState4 = _slicedToArray(_useState3, 2),\n        timeFrame = _useState4[0],\n        setTimeFrame = _useState4[1];\n\n  const _useState5 = useState(indicsOne),\n        _useState6 = _slicedToArray(_useState5, 2),\n        indicators = _useState6[0],\n        setIndicator = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mode = _useState8[0],\n        setMode = _useState8[1];\n\n  const dark = mode ? 'light' : 'dark';\n  const navButtons = [{\n    text: mode ? 'Dark Mode' : 'Light Mode',\n    mode: dark,\n    funct: function () {\n      setMode(mode ? false : true);\n    }\n  }, {\n    text: 'ETH',\n    symbol: sym[0],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: 'BTC',\n    symbol: sym[1],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: 'BCH',\n    symbol: sym[2],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: 'LTC',\n    symbol: sym[3],\n    funct: function () {\n      setCoin(this.symbol);\n    }\n  }, {\n    text: '1 Indicators',\n    indicators: indicsOne[0],\n    funct: function () {\n      setIndicator(this.indicators);\n    }\n  }, {\n    text: '2 Indicators',\n    indicators: indicsOne[1],\n    funct: function () {\n      setIndicator(this.indicators);\n    }\n  }, {\n    text: 'Short-Term',\n    timeFrame: timeFramesTwo,\n    funct: function () {\n      setTimeFrame(this.timeFrame);\n    }\n  }, {\n    text: 'Medium-Term',\n    timeFrame: timeFramesThree,\n    funct: function () {\n      setTimeFrame(this.timeFrame);\n    }\n  }];\n  const charts = [{\n    id: 0,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 1,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 2,\n    class: 'chart-window',\n    symbol: coin\n  }, {\n    id: 3,\n    class: 'scalp-chart',\n    symbol: coin\n  }];\n  return React.createElement(\"div\", {\n    className: \"App \" + dark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar \" + dark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, navButtons.map(button => React.createElement(\"span\", {\n    key: button.text,\n    className: dark,\n    onClick: () => button.funct(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" \", button.text)), links.map(link => React.createElement(\"a\", {\n    key: link.name,\n    className: dark,\n    target: \"_tab\",\n    href: link.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", link.text))), charts.map(chart => React.createElement(\"div\", {\n    key: chart.id,\n    className: chart.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TradingViewWidget, {\n    symbol: chart.symbol,\n    theme: mode ? 'Light' : 'Dark',\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    Style: \"8\",\n    interval: timeFrame[chart.id],\n    studies: indicators,\n    hide_side_toolbar: false,\n    autosize: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/i-code/3-darkened-charts/src/App.js"],"names":["React","useState","TradingViewWidget","links","text","name","indicsOne","sym","timeFrames","timeFramesTwo","timeFramesThree","App","coin","setCoin","timeFrame","setTimeFrame","indicators","setIndicator","mode","setMode","dark","navButtons","funct","symbol","charts","id","class","map","button","link","chart"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState } from 'react'\nimport TradingViewWidget from 'react-tradingview-widget';\n\nconst links = [ {text: 'CoinFarm'    , name:\"https://coinfarm.online/index.asp?tcs=1h\"},\n                {text: 'CMC'         , name:\"https://coinmarketcap.com/\" }, \n                {text: 'Bitfinex'    , name: \"https://www.bitfinex.com/trading\"}, \n                {text: 'Bids vs Sums', name:\"http://data.bitcoinity.org/markets/bidask_sum/7d/USD/coinbase?bp=5&bu=c&t=m\"}]\n\nconst indicsOne = [[ \"MAVolumeWeighted@tv-basicstudies\", \"BollingerBandsR@tv-basicstudies\"],\n                   [ \"RSI@tv-basicstudies\",  \"CMF@tv-basicstudies\"]]\n\nconst sym =       [\"COINBASE:ETHEUR\", \"COINBASE:BTCEUR\", \"COINBASE:BCHEUR\",  \"COINBASE:LTCEUR\" ]\n\nconst timeFrames =     ['3', '15', '30',  '180']\nconst timeFramesTwo =  ['1', '30', '60',  '180']\nconst timeFramesThree =['30','60', '120', 'D']\n\nfunction App() {\n\nconst [coin, setCoin] = useState(sym[1]);\nconst [timeFrame, setTimeFrame] = useState(timeFrames)\nconst [indicators, setIndicator] = useState(indicsOne);\n\nconst [mode, setMode] = useState(true);\n\nconst dark = mode  ? 'light' : 'dark';\n\nconst navButtons =  [\n                     { text: mode ? 'Dark Mode' : 'Light Mode', mode: dark, funct: function(){setMode(mode ? false : true)} },\n\n                     { text: 'ETH', symbol: sym[0], funct: function(){setCoin(this.symbol)} },\n                     { text: 'BTC', symbol: sym[1], funct: function(){setCoin(this.symbol)} },\n                     { text: 'BCH', symbol: sym[2], funct: function(){setCoin(this.symbol)} },\n                     { text: 'LTC', symbol: sym[3], funct: function(){setCoin(this.symbol)} },\n\n                    {text: '1 Indicators', indicators: indicsOne[0], funct: function(){setIndicator(this.indicators)}  },\n                    {text: '2 Indicators', indicators: indicsOne[1], funct: function(){setIndicator(this.indicators)}  },\n                    {text: 'Short-Term'  , timeFrame: timeFramesTwo, funct: function(){setTimeFrame(this.timeFrame)} },\n                    {text: 'Medium-Term' , timeFrame: timeFramesThree, funct: function(){setTimeFrame(this.timeFrame)} },\n                    ]\n\n    const charts = [{ id:0, class:'chart-window', symbol:coin}, { id:1, class:'chart-window', symbol:coin}, \n                    { id:2, class:'chart-window', symbol:coin}, { id:3, class:'scalp-chart' , symbol:coin}]\n   \n return (\n\n<div className={\"App \" + dark}>\n<nav className={\"navbar \" + dark}>\n\n{navButtons.map( button => <span key={button.text} className={dark} onClick={() => button.funct()} > {button.text}</span> )}\n\n{links.map(link => <a key={link.name} className={dark} target=\"_tab\" href={link.name}> {link.text}</a> )}\n\n</nav>\n\n{charts.map( chart => \n    \n<div key={chart.id} className={chart.class}>\n<TradingViewWidget\nsymbol={chart.symbol}\ntheme= {mode ?  'Light': 'Dark' }\nBarStyles='HEIKIN_ASHI'\nlocale=\"en\"\nStyle='8'\ninterval={timeFrame[chart.id]}\nstudies={indicators}  \nhide_side_toolbar={false}\nautosize = {true}        \n/>  \n</div>\n)}\n\n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}