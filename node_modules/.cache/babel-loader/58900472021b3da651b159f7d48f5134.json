{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/random-component/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/ReduceArea.jsx\";\nimport React from 'react'; // import { Component } from 'react'\n\nimport { useState } from 'react';\nexport default function ReduceArea() {\n  // const findResize = () => setWidth(window.innerWidth);\n  // const handleResizes = () => setHeight(window.innerHeight);\n  // window.onresize = () => setWidth(window.innerWidth);\n  // window.onresize = () => setHeight(window.innerHeight);\n  // window.addEventListener('resize', findResize);\n  // window.addEventListener('resize', handleResizes);\n  const _useState = useState(window.innerWidth),\n        _useState2 = _slicedToArray(_useState, 2),\n        width = _useState2[0],\n        setWidth = _useState2[1];\n\n  const _useState3 = useState(window.innerHeight),\n        _useState4 = _slicedToArray(_useState3, 2),\n        height = _useState4[0],\n        setHeight = _useState4[1];\n\n  const handlingResize = () => {\n    setHeight(400);\n    setWidth(600);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" Total area of window in px \", width * height), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" width =  \", width, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" height =  \", height, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" \"), React.createElement(\"button\", {\n    onClick: handlingResize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"click\"));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/ReduceArea.jsx"],"names":["React","useState","ReduceArea","window","innerWidth","width","setWidth","innerHeight","height","setHeight","handlingResize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAGjC;AACA;AAEA;AACA;AAEA;AACA;AAViC,oBAYRD,QAAQ,CAACE,MAAM,CAACC,UAAR,CAZA;AAAA;AAAA,QAY3BC,KAZ2B;AAAA,QAYpBC,QAZoB;;AAAA,qBAaNL,QAAQ,CAACE,MAAM,CAACI,WAAR,CAbF;AAAA;AAAA,QAa3BC,MAb2B;AAAA,QAanBC,SAbmB;;AAejC,QAAMC,cAAc,GAAG,MAAM;AACzBD,IAAAA,SAAS,CAAC,GAAD,CAAT;AACAH,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,GAHD;;AAKA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAiCD,KAAK,GAAGG,MAAzC,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcH,KAAd,MAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeG,MAAf,MAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJA,EAKA;AAAQ,IAAA,OAAO,EAAEE,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALA,CADA;AASH","sourcesContent":["import React from 'react';\n// import { Component } from 'react'\nimport { useState } from 'react';\n\nexport default function ReduceArea() {\n  \n    \n    // const findResize = () => setWidth(window.innerWidth);\n    // const handleResizes = () => setHeight(window.innerHeight);\n\n    // window.onresize = () => setWidth(window.innerWidth);\n    // window.onresize = () => setHeight(window.innerHeight);\n\n    // window.addEventListener('resize', findResize);\n    // window.addEventListener('resize', handleResizes);\n\n    const[width, setWidth] = useState(window.innerWidth);\n    const[height, setHeight] = useState(window.innerHeight);\n\n    const handlingResize = () => {\n        setHeight(400)\n        setWidth(600);\n    }\n\n    return (\n    <div>\n    <h1> Total area of window in px {width * height}</h1>\n    <p> width =  {width} </p>\n    <p> height =  {height} </p>\n    <p> </p>\n    <button onClick={handlingResize} >click</button>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}