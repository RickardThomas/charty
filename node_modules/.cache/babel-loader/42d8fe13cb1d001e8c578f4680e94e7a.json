{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/random-component/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/GetCoordinates.jsx\";\nimport React from 'react';\nimport { useState } from 'react';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ORDER\":\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n}\n\nexport default function GetCoordinates() {\n  const _React$useReducer = React.useReducer(reducer, []),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        orders = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  React.useEffect(() => {\n    const x = window.innerWidth;\n    const y = window.innerHeight;\n    const width = window.event.clientX;\n    const height = window.event.clientY;\n    const order = {\n      x,\n      y,\n      width,\n      height\n    };\n    dispatch({\n      type: \"ADD_ORDER\",\n      payload: order\n    });\n  }, []); // uses onMouseMove, window.event.client \n\n  const _useState = useState(window.innerWidth),\n        _useState2 = _slicedToArray(_useState, 2),\n        width = _useState2[0],\n        setWidth = _useState2[1];\n\n  const _useState3 = useState(window.innerHeight),\n        _useState4 = _slicedToArray(_useState3, 2),\n        height = _useState4[0],\n        setHeight = _useState4[1];\n\n  const _useState5 = useState(window.clientX),\n        _useState6 = _slicedToArray(_useState5, 2),\n        x = _useState6[0],\n        setX = _useState6[1];\n\n  const _useState7 = useState(window.clientY),\n        _useState8 = _slicedToArray(_useState7, 2),\n        y = _useState8[0],\n        setY = _useState8[1];\n\n  window.onresize = () => {\n    setHeight(window.innerHeight);\n    setWidth(window.innerWidth);\n  };\n\n  const showCoords = () => {\n    setX(window.event.clientX);\n    setY(window.event.clientY);\n  };\n\n  return React.createElement(\"div\", {\n    onMouseMove: showCoords,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" coordinates for X =   \", x, \" coordinates for Y : \", y, \" of mouse\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Total area of window in px \", width * height), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" Width: \", width, \" \"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Height:  \", height, \" \"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, orders.map(({\n    x,\n    y,\n    width,\n    height\n  }, i) => React.createElement(\"tr\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" \", x, \" \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, y), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, width), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, height))))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/GetCoordinates.jsx"],"names":["React","useState","reducer","state","action","type","payload","GetCoordinates","useReducer","orders","dispatch","useEffect","x","window","innerWidth","y","innerHeight","width","event","clientX","height","clientY","order","setWidth","setHeight","setX","setY","onresize","showCoords","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\n\nfunction reducer(state, action) {\n    switch (action.type) {\n      case \"ADD_ORDER\":\n        return [...state, action.payload];\n      default:\n        return state;\n    }\n  }\n  \nexport default function GetCoordinates() {\n\n\n    const [orders, dispatch] = React.useReducer(reducer, []);\n\n    React.useEffect(() => {\n    const x = window.innerWidth\n    const y = window.innerHeight\n    const width = window.event.clientX\n    const height = window.event.clientY\n\n    const order = { x, y, width, height};\n          \n        dispatch({ type: \"ADD_ORDER\", payload: order })\n\n    }, []);\n    \n    // uses onMouseMove, window.event.client \n    \n    const[width, setWidth] = useState(window.innerWidth);\n    const[height, setHeight] = useState(window.innerHeight);\n\n    const[x, setX] = useState(window.clientX);\n    const[y, setY] = useState(window.clientY);\n    \n    window.onresize = () => {\n        setHeight(window.innerHeight)\n        setWidth(window.innerWidth)\n    }\n \n    const showCoords = () => {\n        setX(window.event.clientX)\n        setY(window.event.clientY)\n    }\n\n    return (\n    <div onMouseMove={showCoords}>\n    \n    <h2> coordinates for X =   { x } coordinates for Y : { y } of mouse</h2>\n    <h2> Total area of window in px {width * height}</h2>\n    <h2> Width: {width} </h2>\n    <h2> Height:  {height} </h2>\n\n    <table>\n    <tbody>\n            {orders.map(({  x, y, width, height }, i) => (\n              <tr  key={i}  >\n                \n                <td> {x} </td><td>{y}</td><td>{width}</td><td>{height}</td>\n                \n              </tr>\n            ))}\n          </tbody>\n          </table>\n\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}