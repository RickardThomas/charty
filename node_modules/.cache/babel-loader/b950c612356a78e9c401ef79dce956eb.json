{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/interval-random/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/interval-random/src/Components/FetchQuote.jsx\";\nimport React from 'react';\nimport { useEffect } from 'react';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_DEET\":\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n}\n\nexport default function FetchQuote() {\n  // instead of having setState 5 times, just have this\n  const _React$useReducer = React.useReducer(reducer, []),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        deets = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  useEffect(() => {\n    fetch(\"https://quotes.p.rapidapi.com/\").then(results => results.json()).then(data => {\n      const gender = data.results[0].gender;\n      const name = data.results[0].name.first;\n      const seed = data.info.seed;\n      const deet = {\n        gender,\n        name,\n        seed\n      };\n      dispatch({\n        type: \"ADD_DEET\",\n        payload: deet\n      });\n    }); // can add 'count into array to improve optimization\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"Fetch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, deets.map(({\n    gender,\n    name,\n    seed\n  }, i) => React.createElement(\"ul\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, name), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" \", gender, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, seed)))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/interval-random/src/Components/FetchQuote.jsx"],"names":["React","useEffect","reducer","state","action","type","payload","FetchQuote","useReducer","deets","dispatch","fetch","then","results","json","data","gender","name","first","seed","info","deet","map","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,OAAxB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAEH,eAAe,SAASI,UAAT,GAAsB;AAEjC;AAFiC,4BAGPP,KAAK,CAACQ,UAAN,CAAiBN,OAAjB,EAA0B,EAA1B,CAHO;AAAA;AAAA,QAG1BO,KAH0B;AAAA,QAGnBC,QAHmB;;AAKjCT,EAAAA,SAAS,CAAC,MAAM;AAEZU,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACMC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADjB,EAECF,IAFD,CAEOG,IAAD,IAAU;AAChB,YAAMC,MAAM,GAAGD,IAAI,CAACF,OAAL,CAAa,CAAb,EAAgBG,MAA/B;AACA,YAAMC,IAAI,GAAGF,IAAI,CAACF,OAAL,CAAa,CAAb,EAAgBI,IAAhB,CAAqBC,KAAlC;AACA,YAAMC,IAAI,GAAGJ,IAAI,CAACK,IAAL,CAAUD,IAAvB;AAEA,YAAME,IAAI,GAAG;AAACL,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeE,QAAAA;AAAf,OAAb;AAEAT,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAEe;AAA7B,OAAD,CAAR;AAEC,KAXD,EAFY,CAcZ;AACH,GAfQ,EAeN,EAfM,CAAT;AAiBA,SACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCZ,KAAK,CAACa,GAAN,CAAU,CAAC;AAAEN,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBE,IAAAA;AAAhB,GAAD,EAAyBI,CAAzB,KACD;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAL,CADF,EACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMD,MAAN,MADjB,EACoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,IAAJ,CADpC,CADT,CADD,CADA,CADA;AAWH","sourcesContent":["import React from 'react';\nimport {useEffect} from 'react';\n\nfunction reducer(state, action) {\n    switch (action.type) {\n      case \"ADD_DEET\":\n        return [...state, action.payload];\n      default:\n        return state;\n    }\n  }\n\nexport default function FetchQuote() {\n\n    // instead of having setState 5 times, just have this\n    const [deets, dispatch] = React.useReducer(reducer, []);\n\n    useEffect(() => {\n        \n        fetch(\"https://quotes.p.rapidapi.com/\")\n        .then(results => results.json())\n        .then((data) => {\n        const gender = data.results[0].gender\n        const name = data.results[0].name.first\n        const seed = data.info.seed\n\n        const deet = {gender, name, seed}\n\n        dispatch({ type: \"ADD_DEET\", payload: deet })\n \n        });\n        // can add 'count into array to improve optimization\n    }, [])\n\n    return (\n    <div className='Fetch' >\n    <div> \n    {deets.map(({ gender, name, seed }, i) => (\n              <ul key={i} >\n                <h1>{name}</h1><h2> {gender} </h2><p>{seed}</p>\n              </ul>\n            ))}\n    </div>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}