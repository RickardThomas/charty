{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/complete-charts-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/complete-charts-react/src/Components/Ta.jsx\";\nimport React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nexport default function Ta() {\n  const inputRef = useRef();\n\n  const _useState = useState(JSON.parse([localStorage.ListItems])),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const handleAdd = () => {\n    const input = inputRef.current;\n    const iteming = input.value; // RegExp pattern if there are numbers\n\n    if (input.value !== '') {\n      setList([...list, iteming]);\n      localStorage.setItem('ListItems', JSON.stringify(list));\n    }\n\n    input.value = '';\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" Amendment Input \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" Just numbers, 6 digits, cannot submit empty and remove values\"), React.createElement(\"input\", {\n    ref: inputRef,\n    maxLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" Add item\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, list.reverse().map((item, i) => React.createElement(\"iframe\", {\n    width: \"200\",\n    height: \"200\",\n    key: i,\n    src: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/complete-charts-react/src/Components/Ta.jsx"],"names":["React","useState","useRef","useEffect","Ta","inputRef","JSON","parse","localStorage","ListItems","list","setList","handleAdd","input","current","iteming","value","setItem","stringify","reverse","map","item","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA2C,OAA3C;AAEA,eAAe,SAASC,EAAT,GAAc;AAEzB,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;;AAFyB,oBAIDD,QAAQ,CAACK,IAAI,CAACC,KAAL,CAAW,CAACC,YAAY,CAACC,SAAd,CAAX,CAAD,CAJP;AAAA;AAAA,QAIlBC,IAJkB;AAAA,QAIZC,OAJY;;AAMzB,QAAMC,SAAS,GAAG,MAAM;AAEpB,UAAMC,KAAK,GAAGR,QAAQ,CAACS,OAAvB;AACA,UAAMC,OAAO,GAAGF,KAAK,CAACG,KAAtB,CAHoB,CAIpB;;AAGA,QAAIH,KAAK,CAACG,KAAN,KAAgB,EAApB,EAAuB;AACnBL,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUK,OAAV,CAAD,CAAP;AACAP,MAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAkCX,IAAI,CAACY,SAAL,CAAeR,IAAf,CAAlC;AACH;;AACCG,IAAAA,KAAK,CAACG,KAAN,GAAc,EAAd;AACD,GAZL;;AAcA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFA,EAIA;AAAO,IAAA,GAAG,EAAEX,QAAZ;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEO,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACS,OAAL,GAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,KACpB;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,MAAM,EAAC,KAA3B;AAAgC,IAAA,GAAG,EAAEA,CAArC;AAAyC,IAAA,GAAG,EAAED,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADL,CAPA,CADA;AAgBH","sourcesContent":["import React from 'react';\nimport { useState, useRef, useEffect} from 'react';\n\nexport default function Ta() {\n  \n    const inputRef = useRef();\n    \n    const [list, setList] = useState(JSON.parse([localStorage.ListItems]));\n\n    const handleAdd = () => {\n\n        const input = inputRef.current;\n        const iteming = input.value;\n        // RegExp pattern if there are numbers\n        \n    \n        if (input.value !== ''){\n            setList([...list, iteming]);\n            localStorage.setItem('ListItems', JSON.stringify(list))\n        }  \n          input.value = ''\n        };\n\n    return (\n    <div>\n    <h1> Amendment Input </h1>\n    <h3> Just numbers, 6 digits, cannot submit empty and remove values</h3>\n   \n    <input ref={inputRef}  maxLength='6'/>\n    <button type=\"submit\" onClick={handleAdd}> Add item</button>\n\n    <ul> \n        {list.reverse().map((item, i) => (\n        <iframe width=\"200\" height=\"200\"key={i}  src={item} ></iframe>\n        ))}\n        </ul>\n    \n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}