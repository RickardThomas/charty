{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/random-component/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/Example.jsx\";\nimport React from 'react';\nimport { useState, useRef } from 'react'; // useReducer means you can pass more items/ variables to component.\n// you had a problem with adding select value AND input.value\n// you then solved this with the reducer. \n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n}\n\nexport default function Example() {\n  const inputRef = useRef();\n  const heading = useRef();\n  const selRef = useRef();\n\n  const _React$useReducer = React.useReducer(reducer, []),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        list = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  const handleAdd = () => {\n    let input = inputRef.current;\n    let selecting = selRef.current; // change style of heading\n\n    heading.current.className = 'off';\n\n    if (input.value === '') {\n      alert('Number please');\n    }\n\n    const coin = selecting.value;\n    const item = input.value;\n\n    if (input.value !== '') {\n      const deet = {\n        coin,\n        item\n      };\n      dispatch({\n        type: \"ADD_ITEM\",\n        payload: deet\n      });\n      input.value = '';\n    }\n\n    ;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    ref: heading,\n    className: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Amendment Input \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" Just numbers, 6 digits, cannot submit empty and remove values\"), React.createElement(\"select\", {\n    ref: selRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Btc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"BTC\"), React.createElement(\"option\", {\n    value: \"Eth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"ETH\"), React.createElement(\"option\", {\n    value: \"Ltc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"LTC\")), React.createElement(\"input\", {\n    ref: inputRef,\n    maxLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" Add item\"), list.map(({\n    coin,\n    item\n  }, i) => React.createElement(\"ul\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, coin, \" and \", item, \" \"))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/Example.jsx"],"names":["React","useState","useRef","reducer","state","action","type","payload","Example","inputRef","heading","selRef","useReducer","list","dispatch","handleAdd","input","current","selecting","className","value","alert","coin","item","deet","map","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAgC,OAAhC,C,CAEA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,eAAe,SAASI,OAAT,GAAmB;AAE9B,QAAMC,QAAQ,GAAGP,MAAM,EAAvB;AACA,QAAMQ,OAAO,GAAGR,MAAM,EAAtB;AACA,QAAMS,MAAM,GAAGT,MAAM,EAArB;;AAJ8B,4BAMLF,KAAK,CAACY,UAAN,CAAiBT,OAAjB,EAA0B,EAA1B,CANK;AAAA;AAAA,QAMvBU,IANuB;AAAA,QAMjBC,QANiB;;AAQ9B,QAAMC,SAAS,GAAG,MAAM;AAEpB,QAAIC,KAAK,GAAGP,QAAQ,CAACQ,OAArB;AACA,QAAIC,SAAS,GAAGP,MAAM,CAACM,OAAvB,CAHoB,CAKpB;;AACAP,IAAAA,OAAO,CAACO,OAAR,CAAgBE,SAAhB,GAA4B,KAA5B;;AAEA,QAAIH,KAAK,CAACI,KAAN,KAAgB,EAApB,EAAuB;AACnBC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH;;AAED,UAAMC,IAAI,GAAGJ,SAAS,CAACE,KAAvB;AACA,UAAMG,IAAI,GAAGP,KAAK,CAACI,KAAnB;;AAEE,QAAIJ,KAAK,CAACI,KAAN,KAAgB,EAApB,EAAuB;AAErB,YAAMI,IAAI,GAAG;AAACF,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAb;AACAT,MAAAA,QAAQ,CAAC;AAAER,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAEiB;AAA7B,OAAD,CAAR;AACAR,MAAAA,KAAK,CAACI,KAAN,GAAc,EAAd;AACH;;AAAA;AAEA,GAtBL;;AAwBA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,GAAG,EAAEV,OAAT;AAAkB,IAAA,SAAS,EAAE,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFA,EAIA;AAAQ,IAAA,GAAG,EAAEC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,EAEA;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFA,EAGA;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHA,CAJA,EAUA;AAAO,IAAA,GAAG,EAAEF,QAAZ;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,EAYA;AAAQ,IAAA,OAAO,EAAEM,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZA,EAeKF,IAAI,CAACY,GAAL,CAAS,CAAC;AAAEH,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAiBG,CAAjB,KACJ;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,IAAN,WAAkBC,IAAlB,MADF,CADL,CAfL,CADA;AAyBH","sourcesContent":["import React from 'react';\nimport { useState, useRef} from 'react';\n\n// useReducer means you can pass more items/ variables to component.\n// you had a problem with adding select value AND input.value\n// you then solved this with the reducer. \n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n}\n\nexport default function Example() {\n  \n    const inputRef = useRef();\n    const heading = useRef();\n    const selRef = useRef();\n\n    const [list, dispatch] = React.useReducer(reducer, []);\n\n    const handleAdd = () => {\n\n        let input = inputRef.current;\n        let selecting = selRef.current;\n\n        // change style of heading\n        heading.current.className = 'off'\n    \n        if (input.value === ''){\n            alert('Number please')\n        }\n\n        const coin = selecting.value\n        const item = input.value \n\n          if (input.value !== ''){\n\n            const deet = {coin, item}\n            dispatch({ type: \"ADD_ITEM\", payload: deet })\n            input.value = ''\n        };   \n\n        }\n\n    return (\n    <div>\n    <h1 ref={heading} className={\"warning\"}> Amendment Input </h1>\n    <h3> Just numbers, 6 digits, cannot submit empty and remove values</h3>\n   \n    <select ref={selRef}>\n    <option value=\"Btc\">BTC</option>\n    <option value=\"Eth\">ETH</option>\n    <option value=\"Ltc\">LTC</option>\n    </select>\n\n    <input ref={inputRef}  maxLength=\"6\"/>\n\n    <button onClick={handleAdd}> Add item</button>\n   \n\n        {list.map(({ coin, item }, i) => (\n              <ul key={i} >\n                <h2>{ coin } and {item} </h2>\n              </ul>\n            ))}\n\n\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}