{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/random-component/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/Coordinates.jsx\";\nimport React from 'react';\nimport { useState } from 'react';\nexport default function Coordinates() {\n  // uses onMouseMove, window.event.client,  \n  const _useState = useState(window.innerWidth),\n        _useState2 = _slicedToArray(_useState, 2),\n        width = _useState2[0],\n        setWidth = _useState2[1];\n\n  const _useState3 = useState(window.innerHeight),\n        _useState4 = _slicedToArray(_useState3, 2),\n        height = _useState4[0],\n        setHeight = _useState4[1];\n\n  const _useState5 = useState(window.clientX),\n        _useState6 = _slicedToArray(_useState5, 2),\n        x = _useState6[0],\n        setX = _useState6[1];\n\n  const _useState7 = useState(window.clientY),\n        _useState8 = _slicedToArray(_useState7, 2),\n        y = _useState8[0],\n        setY = _useState8[1];\n\n  window.onresize = () => {\n    setHeight(window.innerHeight);\n    setWidth(window.innerWidth);\n  };\n\n  window.onMouseMove;\n\n  const showCoords = () => {\n    setX(window.event.clientX);\n    setY(window.event.clientY);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" coordinates for X =   \", x, \" coordinates for Y : \", y, \" of mouse \"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" Total area of window in px \", width * height), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" Width: \", width, \" \"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" Height:  \", height, \" \"));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/Coordinates.jsx"],"names":["React","useState","Coordinates","window","innerWidth","width","setWidth","innerHeight","height","setHeight","clientX","x","setX","clientY","y","setY","onresize","onMouseMove","showCoords","event"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAElC;AAFkC,oBAITD,QAAQ,CAACE,MAAM,CAACC,UAAR,CAJC;AAAA;AAAA,QAI5BC,KAJ4B;AAAA,QAIrBC,QAJqB;;AAAA,qBAKPL,QAAQ,CAACE,MAAM,CAACI,WAAR,CALD;AAAA;AAAA,QAK5BC,MAL4B;AAAA,QAKpBC,SALoB;;AAAA,qBAOjBR,QAAQ,CAACE,MAAM,CAACO,OAAR,CAPS;AAAA;AAAA,QAO5BC,CAP4B;AAAA,QAOzBC,IAPyB;;AAAA,qBAQjBX,QAAQ,CAACE,MAAM,CAACU,OAAR,CARS;AAAA;AAAA,QAQ5BC,CAR4B;AAAA,QAQzBC,IARyB;;AAUlCZ,EAAAA,MAAM,CAACa,QAAP,GAAkB,MAAM;AACpBP,IAAAA,SAAS,CAACN,MAAM,CAACI,WAAR,CAAT;AACAD,IAAAA,QAAQ,CAACH,MAAM,CAACC,UAAR,CAAR;AACH,GAHD;;AAKAD,EAAAA,MAAM,CAACc,WAAP;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrBN,IAAAA,IAAI,CAACT,MAAM,CAACgB,KAAP,CAAaT,OAAd,CAAJ;AACAK,IAAAA,IAAI,CAACZ,MAAM,CAACgB,KAAP,CAAaN,OAAd,CAAJ;AACH,GAHD;;AAKA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA6BF,CAA7B,2BAAuDG,CAAvD,eADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAiCT,KAAK,GAAGG,MAAzC,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaH,KAAb,MAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeG,MAAf,MAJA,CADA;AASH","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nexport default function Coordinates() {\n\n    // uses onMouseMove, window.event.client,  \n    \n    const[width, setWidth] = useState(window.innerWidth);\n    const[height, setHeight] = useState(window.innerHeight);\n    \n    const[x, setX] = useState(window.clientX);\n    const[y, setY] = useState(window.clientY);\n    \n    window.onresize = () => {\n        setHeight(window.innerHeight)\n        setWidth(window.innerWidth)\n    }\n \n    window.onMouseMove\n    const showCoords = () => {\n        setX(window.event.clientX)\n        setY(window.event.clientY)\n    }\n\n    return (\n    <div>\n    <h2> coordinates for X =   { x } coordinates for Y : { y } of mouse </h2>\n    <h2> Total area of window in px {width * height}</h2>\n    <h2> Width: {width} </h2>\n    <h2> Height:  {height} </h2>\n\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}