{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/random-component/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/FetchQuote.jsx\";\nimport React from 'react';\nimport { useEffect } from 'react';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_DEET\":\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n}\n\nexport default function FetchQuote() {\n  // instead of having setState 4 times, just have this\n  const _React$useReducer = React.useReducer(reducer, []),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        deets = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1]; // use effect because == Data fetching,\n  //  setting up a subscription, \n  // and manually changing the DOM in React components\n  //  are handled by useffect and are examples of side effects\n\n\n  useEffect(() => {\n    fetch(\"https://api.kanye.rest?format=text\").then(results => results.json()).then(data => {\n      // const gender = data.results[0].gender\n      // const name = data.results[0].name.first\n      // const seed = data.info.seed\n      // const deet = {gender, name, seed}\n      let deet = data.quote;\n      console.log(data.quote);\n      dispatch({\n        type: \"ADD_DEET\",\n        payload: deet\n      });\n    }); // can add 'count into array to improve optimization\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"Fetch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, deets.map(({\n    deet\n  }, i) => React.createElement(\"ul\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"quote\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, deet)))));\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/FetchQuote.jsx"],"names":["React","useEffect","reducer","state","action","type","payload","FetchQuote","useReducer","deets","dispatch","fetch","then","results","json","data","deet","quote","console","log","map","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,OAAxB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAEH,eAAe,SAASI,UAAT,GAAsB;AAEjC;AAFiC,4BAGPP,KAAK,CAACQ,UAAN,CAAiBN,OAAjB,EAA0B,EAA1B,CAHO;AAAA;AAAA,QAG1BO,KAH0B;AAAA,QAGnBC,QAHmB,0BAKjC;AACA;AACA;AACA;;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AAEZU,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADjB,EAECF,IAFD,CAEOG,IAAD,IAAU;AAChB;AACA;AACA;AAEA;AAEA,UAAIC,IAAI,GAAGD,IAAI,CAACE,KAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,KAAjB;AAEAP,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAEU;AAA7B,OAAD,CAAR;AAEC,KAdD,EAFY,CAiBZ;AACH,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,SACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACW,GAAN,CAAU,CAAC;AAAEJ,IAAAA;AAAF,GAAD,EAAWK,CAAX,KACD;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAL,CAHF,CADT,CADL,CAFI,CADA;AAqBH","sourcesContent":["import React from 'react';\nimport {useEffect} from 'react';\n\nfunction reducer(state, action) {\n    switch (action.type) {\n      case \"ADD_DEET\":\n        return [...state, action.payload];\n      default:\n        return state;\n    }\n  }\n\nexport default function FetchQuote() {\n\n    // instead of having setState 4 times, just have this\n    const [deets, dispatch] = React.useReducer(reducer, []);\n\n    // use effect because == Data fetching,\n    //  setting up a subscription, \n    // and manually changing the DOM in React components\n    //  are handled by useffect and are examples of side effects\n    \n    useEffect(() => {\n        \n        fetch(\"https://api.kanye.rest?format=text\")\n        .then(results => results.json())\n        .then((data) => {\n        // const gender = data.results[0].gender\n        // const name = data.results[0].name.first\n        // const seed = data.info.seed\n\n        // const deet = {gender, name, seed}\n\n        let deet = data.quote;\n        console.log(data.quote)\n\n        dispatch({ type: \"ADD_DEET\", payload: deet })\n \n        });\n        // can add 'count into array to improve optimization\n    }, [])\n\n    return (\n    <div className='Fetch' >\n\n<div> \n    {deets.map(({ deet }, i) => (\n              <ul key={i} >\n                \n                <h2>quote</h2>\n                <h2>{deet}</h2>\n              </ul>\n            ))}\n    </div>\n    {/* <div> \n    {deets.map(({ gender, name, seed }, i) => (\n              <ul key={i} >\n                <h1>{name}</h1><h2> {gender} </h2><p>{seed}</p>\n              </ul>\n            ))}\n    </div> */}\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}