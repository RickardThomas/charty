{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/new-charts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/new-charts/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ScalpEth from './Components/ScalpEth';\nimport { useState } from 'react';\n\nfunction App() {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isToggleOnFour = _useState2[0],\n        setToggleFour = _useState2[1]; // const [chart, setChart] = useState(1)\n\n\n  const hanClickFour = () => {\n    setToggleFour(isToggleOnFour ? false : true);\n  };\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: hanClickFour,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Scalping ETH\")), isToggleOnFour ? false : React.createElement(ScalpEth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"You clicked \", count, \" times\"), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Click me\"), count < 5 ? React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Click me\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), count === 1 ? React.createElement(ScalpEth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : false);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/new-charts/src/App.js"],"names":["React","ScalpEth","useState","App","isToggleOnFour","setToggleFour","hanClickFour","count","setCount"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAEyBD,QAAQ,CAAC,IAAD,CAFjC;AAAA;AAAA,QAERE,cAFQ;AAAA,QAEQC,aAFR,kBAIf;;;AAGA,QAAMC,YAAY,GAAG,MAAM;AAC3BD,IAAAA,aAAa,CAAED,cAAc,GAAI,KAAJ,GAAY,IAA5B,CAAb;AACC,GAFD;;AAPe,qBAWWF,QAAQ,CAAC,CAAD,CAXnB;AAAA;AAAA,QAWRK,KAXQ;AAAA,QAWDC,QAXC;;AAcf,SAEA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAG,IAAA,OAAO,EAAEF,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,CADA,EAOCF,cAAc,GAAG,KAAH,GAAW,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAP1B,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBG,KAAhB,WADN,EAEM;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFN,EAMOA,KAAK,GAAG,CAAR,GAAY;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ,GAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARlB,CATA,EAuBKA,KAAK,KAAK,CAAV,GAAc,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAA4B,KAvBjC,CAFA;AAiCC;;AAED,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ScalpEth from './Components/ScalpEth';\nimport { useState } from 'react'\n\nfunction App() {\n\nconst [isToggleOnFour, setToggleFour] = useState(true)\n\n// const [chart, setChart] = useState(1)\n\n\nconst hanClickFour = () => {\nsetToggleFour( isToggleOnFour  ? false : true)\n}\n\nconst [count, setCount] = useState(0);\n\n\nreturn (\n\n<div className=\"App\">\n<div className=\"Navbar\">\n\n<a onClick={hanClickFour}>Scalping ETH</a>\n\n</div >\n\n{isToggleOnFour ? false : <ScalpEth/>}\n\n<div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n\n      {count < 5 ? <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button> : <span></span>}\n\n    \n      \n    </div>\n\n    {count === 1 ? <ScalpEth/> : false}\n\n   \n\n\n</div>\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}