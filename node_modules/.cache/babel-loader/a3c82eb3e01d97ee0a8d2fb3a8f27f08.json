{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/new-charts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/new-charts/src/App.js\";\nimport React from 'react';\nimport './App.css'; // import ScalpEth from './Components/ScalpEth';\n\nimport { useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\n\nfunction App() {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState('BTC'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        coiny = _useState4[0],\n        setCoiny = _useState4[1];\n\n  let width = TradingViewWidget.width = '980px';\n  let heighty = TradingViewWidget.height = '610px';\n  let themey = TradingViewWidget.theme = 'Dark';\n  let indicators = TradingViewWidget.studies = [\"TripleEMA@tv-basicstudies\", \"RSI@tv-basicstudies\"];\n\n  const _useState5 = useState(\"ETH\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        input = _useState6[0],\n        setInput = _useState6[1]; // '' is the initial state value\n\n\n  let coin = \"COINBASE:\" + input + \"EUR\";\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"NEXT\"), React.createElement(\"input\", {\n    value: input,\n    onInput: e => setInput(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"rt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\xA0\\u310F\\u3122\\u02CB\\xA0\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"You clicked times\", count < 5 ? React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Click me\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setCoiny('ETH'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"ETH\"))), count === 2 ? React.createElement(TradingViewWidget, {\n    symbol: coin,\n    theme: themey,\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    style: \"8\",\n    interval: \"1\",\n    studies: indicators,\n    hide_side_toolbar: false,\n    width: 1000,\n    height: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : false);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/new-charts/src/App.js"],"names":["React","useState","TradingViewWidget","App","count","setCount","coiny","setCoiny","width","heighty","height","themey","theme","indicators","studies","input","setInput","coin","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;;AAEA,SAASC,GAAT,GAAe;AAAA,oBAEWF,QAAQ,CAAC,CAAD,CAFnB;AAAA;AAAA,QAERG,KAFQ;AAAA,QAEDC,QAFC;;AAAA,qBAGWJ,QAAQ,CAAC,KAAD,CAHnB;AAAA;AAAA,QAGRK,KAHQ;AAAA,QAGDC,QAHC;;AAKf,MAAIC,KAAK,GAAGN,iBAAiB,CAACM,KAAlB,GAA0B,OAAtC;AACA,MAAIC,OAAO,GAAGP,iBAAiB,CAACQ,MAAlB,GAA2B,OAAzC;AACA,MAAIC,MAAM,GAAGT,iBAAiB,CAACU,KAAlB,GAA0B,MAAvC;AACA,MAAIC,UAAU,GAAIX,iBAAiB,CAACY,OAAlB,GAA4B,CAAE,2BAAF,EAAgC,qBAAhC,CAA9C;;AARe,qBAUWb,QAAQ,CAAC,KAAD,CAVnB;AAAA;AAAA,QAURc,KAVQ;AAAA,QAUDC,QAVC,kBAU4B;;;AAE3C,MAAIC,IAAI,GAAG,cAAcF,KAAd,GAAsB,KAAjC;AAEA,SAEA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,KAAK,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEA;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAqB,IAAA,OAAO,EAAEG,CAAC,IAAIF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHA,CALA,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACChB,KAAK,GAAG,CAAR,GAAY;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ,GAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,EAKA;AAAQ,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALA,CADA,CAZJ,EAyBKH,KAAK,KAAK,CAAV,GAED,oBAAC,iBAAD;AACA,IAAA,MAAM,EAAEa,IADR;AAEA,IAAA,KAAK,EAAGN,MAFR;AAGA,IAAA,SAAS,EAAC,aAHV;AAIA,IAAA,MAAM,EAAC,IAJP;AAKA,IAAA,KAAK,EAAC,GALN;AAMA,IAAA,QAAQ,EAAC,GANT;AAOA,IAAA,OAAO,EAAEE,UAPT;AAQA,IAAA,iBAAiB,EAAE,KARnB;AASA,IAAA,KAAK,EAAE,IATP;AAUA,IAAA,MAAM,EAAE,IAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFC,GAeD,KAxCJ,CAFA;AAiDC;;AAED,eAAeV,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n// import ScalpEth from './Components/ScalpEth';\nimport { useState } from 'react'\nimport TradingViewWidget from 'react-tradingview-widget';\n\nfunction App() {\n\nconst [count, setCount] = useState(1);\nconst [coiny, setCoiny] = useState('BTC');\n\nlet width = TradingViewWidget.width = '980px'\nlet heighty = TradingViewWidget.height = '610px'\nlet themey = TradingViewWidget.theme = 'Dark' ;\nlet indicators =  TradingViewWidget.studies = [ \"TripleEMA@tv-basicstudies\",  \"RSI@tv-basicstudies\"]\n\nconst [input, setInput] = useState(\"ETH\"); // '' is the initial state value\n\nlet coin = \"COINBASE:\" + input + \"EUR\"\n\nreturn (\n\n<div className=\"App\">\n<div className=\"Navbar\">\n\n</div >\n\n<p>\n<i class=\"arrow\">NEXT</i>\n<input value={input} onInput={e => setInput(e.target.value)}/>\n<rt> ㄏㄢˋ </rt>\n\n</p>\n\n    <div>\n    <p>You clicked times\n    {count < 5 ? <button onClick={() => setCount(count + 1)}>\n      Click me\n    </button> : <span></span>}\n\n    <button onClick={() => setCoiny('ETH')}>\n      ETH\n    </button>\n\n    </p>\n    </div>\n\n    {count === 2 ? \n    \n    <TradingViewWidget\n    symbol={coin}\n    theme= {themey}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    style='8'\n    interval='1'\n    studies={indicators}  \n    hide_side_toolbar={false}\n    width={1000}\n    height={1000}        \n  /> \n\n  : false}\n\n</div>\n\n\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}