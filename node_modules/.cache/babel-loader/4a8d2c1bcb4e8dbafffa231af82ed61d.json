{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Desktop/random-component/src/Components/Stripe.jsx\";\nimport React from 'react';\nimport { CardElement, injectStripe, StripeProvider, Elements } from 'react-stripe-elements'; // You can customize your Elements to give it the look and feel of your site.\n\nconst createOptions = () => {\n  return {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        fontFamily: 'Open Sans, sans-serif',\n        letterSpacing: '0.025em',\n        '::placeholder': {\n          color: '#aab7c4'\n        }\n      },\n      invalid: {\n        color: '#c23d4b'\n      }\n    }\n  };\n};\n\nclass _CardForm {\n  constructor() {\n    this.state = {\n      errorMessage: ''\n    };\n\n    this.handleChange = ({\n      error\n    }) => {\n      if (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n\n      if (this.props.stripe) {\n        this.props.stripe.createToken().then(this.props.handleResult);\n      } else {\n        console.log(\"Stripe.js hasn't loaded yet.\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CardDemo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Card details\", React.createElement(CardElement, Object.assign({\n      onChange: this.handleChange\n    }, createOptions(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"error\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.errorMessage), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Pay\")));\n  }\n\n}\n\nconst CardForm = injectStripe(_CardForm);\nexport default class CardDemo {\n  render() {\n    return React.createElement(StripeProvider, {\n      apiKey: this.props.stripePublicKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Elements, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(CardForm, {\n      handleResult: this.props.handleResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/tom/Desktop/random-component/src/Components/Stripe.jsx"],"names":["React","CardElement","injectStripe","StripeProvider","Elements","createOptions","style","base","fontSize","color","fontFamily","letterSpacing","invalid","_CardForm","state","errorMessage","handleChange","error","setState","message","handleSubmit","evt","preventDefault","props","stripe","createToken","then","handleResult","console","log","render","bind","CardForm","CardDemo","stripePublicKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,QAJF,QAKO,uBALP,C,CAOA;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,MADN;AAEJC,QAAAA,KAAK,EAAE,SAFH;AAGJC,QAAAA,UAAU,EAAE,uBAHR;AAIJC,QAAAA,aAAa,EAAE,SAJX;AAKJ,yBAAiB;AACfF,UAAAA,KAAK,EAAE;AADQ;AALb,OADD;AAULG,MAAAA,OAAO,EAAE;AACPH,QAAAA,KAAK,EAAE;AADA;AAVJ;AADF,GAAP;AAgBD,CAjBD;;AAmBA,MAAMI,SAAN,CAAgB;AAAA;AAAA,SACdC,KADc,GACN;AACNC,MAAAA,YAAY,EAAE;AADR,KADM;;AAAA,SAKdC,YALc,GAKC,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAa;AAC1B,UAAIA,KAAJ,EAAW;AACT,aAAKC,QAAL,CAAc;AAACH,UAAAA,YAAY,EAAEE,KAAK,CAACE;AAArB,SAAd;AACD;AACF,KATa;;AAAA,SAWdC,YAXc,GAWEC,GAAD,IAAS;AACtBA,MAAAA,GAAG,CAACC,cAAJ;;AACA,UAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,aAAKD,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,GAAgCC,IAAhC,CAAqC,KAAKH,KAAL,CAAWI,YAAhD;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AACF,KAlBa;AAAA;;AAoBdC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkBW,IAAlB,CAAuB,IAAvB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAE,KAAKf;AADjB,OAEMX,aAAa,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF,EAQE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKS,KAAL,CAAWC,YADd,CARF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,CADF,CADF;AAiBD;;AAtCa;;AAyChB,MAAMiB,QAAQ,GAAG9B,YAAY,CAACW,SAAD,CAA7B;AAEA,eAAe,MAAMoB,QAAN,CAAe;AAC5BH,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWW,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAE,KAAKX,KAAL,CAAWI,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAT2B","sourcesContent":["import React from 'react';\nimport {\n  CardElement,\n  injectStripe,\n  StripeProvider,\n  Elements,\n} from 'react-stripe-elements';\n\n// You can customize your Elements to give it the look and feel of your site.\nconst createOptions = () => {\n  return {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        fontFamily: 'Open Sans, sans-serif',\n        letterSpacing: '0.025em',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#c23d4b',\n      },\n    }\n  }\n};\n\nclass _CardForm {\n  state = {\n    errorMessage: '',\n  };\n\n  handleChange = ({error}) => {\n    if (error) {\n      this.setState({errorMessage: error.message});\n    }\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (this.props.stripe) {\n      this.props.stripe.createToken().then(this.props.handleResult);\n    } else {\n      console.log(\"Stripe.js hasn't loaded yet.\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"CardDemo\">\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <label>\n            Card details\n            <CardElement\n              onChange={this.handleChange}\n              {...createOptions()}\n            />\n          </label>\n          <div className=\"error\" role=\"alert\">\n            {this.state.errorMessage}\n          </div>\n          <button>Pay</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst CardForm = injectStripe(_CardForm);\n\nexport default class CardDemo {\n  render() {\n    return (\n      <StripeProvider apiKey={this.props.stripePublicKey}>\n        <Elements>\n          <CardForm handleResult={this.props.handleResult} />\n        </Elements>\n      </StripeProvider>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}