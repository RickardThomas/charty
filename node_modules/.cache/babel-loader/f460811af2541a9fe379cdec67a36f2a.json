{"ast":null,"code":"import _slicedToArray from \"/Users/tom/Desktop/new-charts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tom/Desktop/new-charts/src/App.js\";\nimport React from 'react';\nimport './App.css'; // import ScalpEth from './Components/ScalpEth';\n\nimport { useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\nlet width = TradingViewWidget.width = '980px';\nlet heighty = TradingViewWidget.height = '610px';\nlet themey = TradingViewWidget.theme = 'Dark';\nlet indicators = TradingViewWidget.studies = [\"TripleEMA@tv-basicstudies\", \"RSI@tv-basicstudies\"];\n\nconst _useState = useState(\"ETH\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1]; // '' is the initial state value\n\n\nlet coin = \"COINBASE:\" + input + \"EUR\";\n\nfunction App() {\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"You clicked times\", count < 5 ? React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Click me\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))), count === 2 ? React.createElement(TradingViewWidget, {\n    symbol: coin,\n    theme: themey,\n    BarStyles: \"HEIKIN_ASHI\",\n    locale: \"en\",\n    style: \"8\",\n    interval: \"1\",\n    studies: indicators,\n    hide_side_toolbar: false,\n    width: 1000,\n    height: 1000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : false);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tom/Desktop/new-charts/src/App.js"],"names":["React","useState","TradingViewWidget","width","heighty","height","themey","theme","indicators","studies","input","setInput","coin","App","count","setCount"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AAGA,IAAIC,KAAK,GAAGD,iBAAiB,CAACC,KAAlB,GAA0B,OAAtC;AACA,IAAIC,OAAO,GAAGF,iBAAiB,CAACG,MAAlB,GAA2B,OAAzC;AACA,IAAIC,MAAM,GAAGJ,iBAAiB,CAACK,KAAlB,GAA0B,MAAvC;AACA,IAAIC,UAAU,GAAIN,iBAAiB,CAACO,OAAlB,GAA4B,CAAE,2BAAF,EAAgC,qBAAhC,CAA9C;;kBAE0BR,QAAQ,CAAC,KAAD,C;;MAA3BS,K;MAAOC,Q,kBAA6B;;;AAE3C,IAAIC,IAAI,GAAG,cAAcF,KAAd,GAAsB,KAAjC;;AAEA,SAASG,GAAT,GAAe;AAAA,qBAEWZ,QAAQ,CAAC,CAAD,CAFnB;AAAA;AAAA,QAERa,KAFQ;AAAA,QAEDC,QAFC;;AAIf,SAEA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACCD,KAAK,GAAG,CAAR,GAAY;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ,GAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,CADA,CALJ,EAaKA,KAAK,KAAK,CAAV,GAAc,oBAAC,iBAAD;AACf,IAAA,MAAM,EAAEF,IADO;AAEf,IAAA,KAAK,EAAGN,MAFO;AAGf,IAAA,SAAS,EAAC,aAHK;AAIf,IAAA,MAAM,EAAC,IAJQ;AAKf,IAAA,KAAK,EAAC,GALS;AAMf,IAAA,QAAQ,EAAC,GANM;AAOf,IAAA,OAAO,EAAEE,UAPM;AAQf,IAAA,iBAAiB,EAAE,KARJ;AASf,IAAA,KAAK,EAAE,IATQ;AAUf,IAAA,MAAM,EAAE,IAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAWE,KAxBP,CAFA;AAiCC;;AAED,eAAeK,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n// import ScalpEth from './Components/ScalpEth';\nimport { useState } from 'react'\nimport TradingViewWidget from 'react-tradingview-widget';\n\n\nlet width = TradingViewWidget.width = '980px'\nlet heighty = TradingViewWidget.height = '610px'\nlet themey = TradingViewWidget.theme = 'Dark' ;\nlet indicators =  TradingViewWidget.studies = [ \"TripleEMA@tv-basicstudies\",  \"RSI@tv-basicstudies\"]\n\nconst [input, setInput] = useState(\"ETH\"); // '' is the initial state value\n\nlet coin = \"COINBASE:\" + input + \"EUR\"\n\nfunction App() {\n\nconst [count, setCount] = useState(1);\n\nreturn (\n\n<div className=\"App\">\n<div className=\"Navbar\">\n\n</div >\n\n    <div>\n    <p>You clicked times\n    {count < 5 ? <button onClick={() => setCount(count + 1)}>\n      Click me\n    </button> : <span></span>}\n    </p>\n    </div>\n\n    {count === 2 ? <TradingViewWidget\n    symbol={coin}\n    theme= {themey}\n    BarStyles='HEIKIN_ASHI'\n    locale=\"en\"\n    style='8'\n    interval='1'\n    studies={indicators}  \n    hide_side_toolbar={false}\n    width={1000}\n    height={1000}        \n  /> : false}\n\n</div>\n\n\n\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}